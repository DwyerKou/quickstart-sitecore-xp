AWSTemplateFormatVersion: 2010-09-09
Description: 'This template deploys the Auto Scaling Groups and Launch Configurations. The Launch Configurations launch the instances for the Sitecore roles  (qs-1qjogjg57)'
Parameters:
  PrivateSubnet1A:
    Type: String
  PrivateSubnet2A:
    Type: String
  CDMinSize:
    Type: String
  CDMaxSize:
    Type: String
  CDDesiredCapacity:
    Type: String
  CDInstanceType:
    Type: String
  CDScalingMetric:
    Type: String
    Default: ASGAverageCPUUtilization
    AllowedValues:
      - ASGAverageCPUUtilization
      - ASGAverageNetworkIn
      - ALBRequestCountPerTarget
  CDScalingMetricValue:
    Type: String
    Default: 5
  CMInstanceType:
    Type: String
  CMMinSize:
    Type: Number
  CMMaxSize:
    Type: Number
  CMDesiredCapacity:
    Type: Number
  CMScalingMetric:
    Type: String
    Default: ASGAverageCPUUtilization
    AllowedValues:
      - ASGAverageCPUUtilization
      - ASGAverageNetworkIn
      - ALBRequestCountPerTarget
  CMScalingMetricValue:
    Type: String
    Default: 5
  SitecoreInstanceSG:
    Type: AWS::EC2::SecurityGroup::Id
  SCInstanceProfile:
    Type: String
  SitecoreKeyPair:
    Type: String
  AutoscalingSNS:
    Type: String
  LocalQSScripts:
    Type: String
  SCQSPrefix:
    Type: String
  CDExtTargetGroup:
    Type: String
  CMExtTargetGroup:
    Type: String
  ISExtTargetGroup:
    Type: String
  ColIntTargetGroup:
    Type: String
  CSIntTargetGroup:
    Type: String
  CPIntTargetGroup:
    Type: String
  CRIntTargetGroup:
    Type: String
  MAIntTargetGroup:
    Type: String
  MARIntTargetGroup:
    Type: String
  PrcIntTargetGroup:
    Type: String
  RDIntTargetGroup:
    Type: String
  RepIntTargetGroup:
    Type: String

Resources:
  #Create Auto Scaling Groups & Launch Configurations
  ContentDeliveryASG:
    Type: AWS::AutoScaling::AutoScalingGroup
    CreationPolicy: # Wait for the instance to signal that it is created
      ResourceSignal:
        Timeout: PT15M
        Count: !Ref CDDesiredCapacity
    UpdatePolicy:
      AutoScalingScheduledAction:
        IgnoreUnmodifiedGroupSizeProperties: true
      AutoScalingRollingUpdate:
        MinInstancesInService: 1
        MaxBatchSize: 1
        WaitOnResourceSignals: true
        PauseTime: PT15M
    Properties:
      LaunchConfigurationName: !Ref ContentDeliveryLC
      MaxSize: !Ref CDMaxSize
      MinSize: !Ref CDMinSize
      DesiredCapacity: !Ref CDDesiredCapacity
      VPCZoneIdentifier:
        - !Ref PrivateSubnet1A
        - !Ref PrivateSubnet2A
      TargetGroupARNs:
        - !Ref CDExtTargetGroup
      NotificationConfigurations:
        - TopicARN: !Ref AutoscalingSNS
          NotificationTypes:
            - autoscaling:EC2_INSTANCE_LAUNCH
            - autoscaling:EC2_INSTANCE_LAUNCH_ERROR
            - autoscaling:EC2_INSTANCE_TERMINATE
            - autoscaling:EC2_INSTANCE_TERMINATE_ERROR
      Tags:
        - Key: Name
          Value: !Sub ContentDelivery-${SCQSPrefix}
          PropagateAtLaunch: true
        - Key: Sitecore-QuickStart
          Value: !Sub ${SCQSPrefix}
          PropagateAtLaunch: true
  ContentDeliveryLC:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      ImageId: !Sub '{{resolve:ssm:/${SCQSPrefix}/instance/ami/customid:1}}'
      InstanceType: !Ref CDInstanceType
      SecurityGroups:
        - !Ref SitecoreInstanceSG
      IamInstanceProfile: !Ref SCInstanceProfile
      KeyName: !Ref SitecoreKeyPair
      UserData: !Base64
        Fn::Join:
          - ''
          - - "<powershell>\n"
            - !Sub '${LocalQSScripts}\sc-role-prep.ps1 -Role "CD" -SCQSPrefix '
            - !Sub '"${SCQSPrefix}"'
            - "\n"
            - !Sub '${LocalQSScripts}\sc-install-resources.ps1 -Role "CD" -SCQSPrefix '
            - !Sub '"${SCQSPrefix}" -Region '
            - !Sub '"${AWS::Region}"'
            - "\n"
            - !Sub '${LocalQSScripts}\sc-update-web-config.ps1 -SCQSPrefix '
            - !Sub '"${SCQSPrefix}"'
            - "\n"
            - !Sub 'New-AWSQuickStartResourceSignal -Stack "${AWS::StackName}" -Region '
            - !Sub '"${AWS::Region}" -Resource "ContentDeliveryASG"'
            - "\n"
            - "Write-AWSQuickStartStatus"
            - "\n"
            - "</powershell>\n"
  CDScalingPolicy:
    Type: AWS::AutoScaling::ScalingPolicy
    Properties:
      AutoScalingGroupName: !Ref ContentDeliveryASG
      PolicyType: TargetTrackingScaling
      EstimatedInstanceWarmup: 300
      TargetTrackingConfiguration:
        PredefinedMetricSpecification:
          PredefinedMetricType: !Ref CDScalingMetric
        TargetValue: !Ref CDScalingMetricValue
  ContentManagementASG:
    Type: AWS::AutoScaling::AutoScalingGroup
    CreationPolicy: # Wait for the instance to signal that it is created
      ResourceSignal:
        Timeout: PT15M
        Count: !Ref CMDesiredCapacity
    UpdatePolicy:
      AutoScalingScheduledAction:
        IgnoreUnmodifiedGroupSizeProperties: true
      AutoScalingRollingUpdate:
        MinInstancesInService: 1
        MaxBatchSize: 1
        WaitOnResourceSignals: true
        PauseTime: PT15M
    Properties:
      LaunchConfigurationName: !Ref ContentManagementLC
      MaxSize: !Ref CMMaxSize
      MinSize: !Ref CMMinSize
      DesiredCapacity: !Ref CMDesiredCapacity
      VPCZoneIdentifier:
        - !Ref PrivateSubnet1A
        - !Ref PrivateSubnet2A
      TargetGroupARNs:
        - !Ref CMExtTargetGroup
      NotificationConfigurations:
        - TopicARN: !Ref AutoscalingSNS
          NotificationTypes:
            - autoscaling:EC2_INSTANCE_LAUNCH
            - autoscaling:EC2_INSTANCE_LAUNCH_ERROR
            - autoscaling:EC2_INSTANCE_TERMINATE
            - autoscaling:EC2_INSTANCE_TERMINATE_ERROR
      Tags:
        - Key: Name
          Value: !Sub ContentManagement-${SCQSPrefix}
          PropagateAtLaunch: true
        - Key: Sitecore-QuickStart
          Value: !Sub ${SCQSPrefix}
          PropagateAtLaunch: true
  ContentManagementLC:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      ImageId: !Sub '{{resolve:ssm:/${SCQSPrefix}/instance/ami/customid:1}}'
      InstanceType: !Ref CMInstanceType
      SecurityGroups:
        - !Ref SitecoreInstanceSG
      IamInstanceProfile: !Ref SCInstanceProfile
      KeyName: !Ref SitecoreKeyPair
      UserData: !Base64
        Fn::Join:
          - ''
          - - "<powershell>\n"
            - !Sub '${LocalQSScripts}\sc-role-prep.ps1 -Role "CM" -SCQSPrefix '
            - !Sub '"${SCQSPrefix}"'
            - "\n"
            - !Sub '${LocalQSScripts}\sc-install-resources.ps1 -Role "CM" -SCQSPrefix '
            - !Sub '"${SCQSPrefix}" -Region '
            - !Sub '"${AWS::Region}"'
            - "\n"
            - !Sub 'New-AWSQuickStartResourceSignal -Stack "${AWS::StackName}" -Region '
            - !Sub '"${AWS::Region}" -Resource "ContentManagementASG"'
            - "\n"
            - "Write-AWSQuickStartStatus"
            - "\n"
            - "\n"
            - "</powershell>\n"
  CMScalingPolicy:
    Type: AWS::AutoScaling::ScalingPolicy
    Properties:
      AutoScalingGroupName: !Ref ContentManagementASG
      PolicyType: TargetTrackingScaling
      EstimatedInstanceWarmup: 300
      TargetTrackingConfiguration:
        PredefinedMetricSpecification:
          PredefinedMetricType: !Ref CMScalingMetric
        TargetValue: !Ref CMScalingMetricValue
  CollectionASG:
    Type: AWS::AutoScaling::AutoScalingGroup
    CreationPolicy: # Wait for the instance to signal that it is created
      ResourceSignal:
        Timeout: PT15M
        Count: 1
    UpdatePolicy:
      AutoScalingScheduledAction:
        IgnoreUnmodifiedGroupSizeProperties: true
      AutoScalingRollingUpdate:
        MinInstancesInService: 1
        MaxBatchSize: 1
        WaitOnResourceSignals: true
        PauseTime: PT15M
    Properties:
      LaunchConfigurationName: !Ref CollectionLC
      MaxSize: '2'
      MinSize: '1'
      DesiredCapacity: '1'
      VPCZoneIdentifier:
        - !Ref PrivateSubnet1A
        - !Ref PrivateSubnet2A
      TargetGroupARNs:
        - !Ref ColIntTargetGroup
      NotificationConfigurations:
        - TopicARN: !Ref AutoscalingSNS
          NotificationTypes:
            - autoscaling:EC2_INSTANCE_LAUNCH
            - autoscaling:EC2_INSTANCE_LAUNCH_ERROR
            - autoscaling:EC2_INSTANCE_TERMINATE
            - autoscaling:EC2_INSTANCE_TERMINATE_ERROR
      Tags:
        - Key: Name
          Value: !Sub Collection-${SCQSPrefix}
          PropagateAtLaunch: true
        - Key: Sitecore-QuickStart
          Value: !Sub ${SCQSPrefix}
          PropagateAtLaunch: true
  CollectionLC:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      ImageId: !Sub '{{resolve:ssm:/${SCQSPrefix}/instance/ami/customid:1}}'
      InstanceType: !Ref CDInstanceType
      SecurityGroups:
        - !Ref SitecoreInstanceSG
      IamInstanceProfile: !Ref SCInstanceProfile
      KeyName: !Ref SitecoreKeyPair
      UserData: !Base64
        Fn::Join:
          - ''
          - - "<powershell>\n"
            - !Sub '${LocalQSScripts}\sc-role-prep.ps1 -Role "Collection" -SCQSPrefix '
            - !Sub '"${SCQSPrefix}"'
            - "\n"
            - !Sub '${LocalQSScripts}\sc-install-resources.ps1 -Role "Collection" -SCQSPrefix '
            - !Sub '"${SCQSPrefix}" -Region '
            - !Sub '"${AWS::Region}"'
            - "\n"
            - !Sub 'New-AWSQuickStartResourceSignal -Stack "${AWS::StackName}" -Region '
            - !Sub '"${AWS::Region}" -Resource "CollectionASG"'
            - "\n"
            - "Write-AWSQuickStartStatus"
            - "\n"
            - "</powershell>\n"
  CollectionSearchASG:
    Type: AWS::AutoScaling::AutoScalingGroup
    CreationPolicy: # Wait for the instance to signal that it is created
      ResourceSignal:
        Timeout: PT15M
        Count: 1
    UpdatePolicy:
      AutoScalingScheduledAction:
        IgnoreUnmodifiedGroupSizeProperties: true
      AutoScalingRollingUpdate:
        MinInstancesInService: 1
        MaxBatchSize: 1
        WaitOnResourceSignals: true
        PauseTime: PT15M
    Properties:
      LaunchConfigurationName: !Ref CollectionSearchLC
      MaxSize: '2'
      MinSize: '1'
      DesiredCapacity: '1'
      VPCZoneIdentifier:
        - !Ref PrivateSubnet1A
        - !Ref PrivateSubnet2A
      TargetGroupARNs:
        - !Ref CSIntTargetGroup
      NotificationConfigurations:
        - TopicARN: !Ref AutoscalingSNS
          NotificationTypes:
            - autoscaling:EC2_INSTANCE_LAUNCH
            - autoscaling:EC2_INSTANCE_LAUNCH_ERROR
            - autoscaling:EC2_INSTANCE_TERMINATE
            - autoscaling:EC2_INSTANCE_TERMINATE_ERROR
      Tags:
        - Key: Name
          Value: !Sub CollectionSearch-${SCQSPrefix}
          PropagateAtLaunch: true
        - Key: Sitecore-QuickStart
          Value: !Sub ${SCQSPrefix}
          PropagateAtLaunch: true
  CollectionSearchLC:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      ImageId: !Sub '{{resolve:ssm:/${SCQSPrefix}/instance/ami/customid:1}}'
      InstanceType: !Ref CDInstanceType
      SecurityGroups:
        - !Ref SitecoreInstanceSG
      IamInstanceProfile: !Ref SCInstanceProfile
      KeyName: !Ref SitecoreKeyPair
      UserData: !Base64
        Fn::Join:
          - ''
          - - "<powershell>\n"
            - !Sub '${LocalQSScripts}\sc-role-prep.ps1 -Role "CollectionSearch" -SCQSPrefix '
            - !Sub '"${SCQSPrefix}"'
            - "\n"
            - !Sub '${LocalQSScripts}\sc-install-resources.ps1 -Role "CollectionSearch" -SCQSPrefix '
            - !Sub '"${SCQSPrefix}" -Region '
            - !Sub '"${AWS::Region}"'
            - "\n"
            - !Sub 'New-AWSQuickStartResourceSignal -Stack "${AWS::StackName}" -Region '
            - !Sub '"${AWS::Region}" -Resource "CollectionSearchASG"'
            - "\n"
            - "Write-AWSQuickStartStatus"
            - "\n"
            - "</powershell>\n"
  CortexProcessingASG:
    Type: AWS::AutoScaling::AutoScalingGroup
    CreationPolicy: # Wait for the instance to signal that it is created
      ResourceSignal:
        Timeout: PT15M
        Count: 1
    UpdatePolicy:
      AutoScalingScheduledAction:
        IgnoreUnmodifiedGroupSizeProperties: true
      AutoScalingRollingUpdate:
        MinInstancesInService: 1
        MaxBatchSize: 1
        WaitOnResourceSignals: true
        PauseTime: PT15M
    Properties:
      LaunchConfigurationName: !Ref CortexProcessingLC
      MaxSize: '2'
      MinSize: '1'
      DesiredCapacity: '1'
      VPCZoneIdentifier:
        - !Ref PrivateSubnet1A
        - !Ref PrivateSubnet2A
      TargetGroupARNs:
        - !Ref CPIntTargetGroup
      NotificationConfigurations:
        - TopicARN: !Ref AutoscalingSNS
          NotificationTypes:
            - autoscaling:EC2_INSTANCE_LAUNCH
            - autoscaling:EC2_INSTANCE_LAUNCH_ERROR
            - autoscaling:EC2_INSTANCE_TERMINATE
            - autoscaling:EC2_INSTANCE_TERMINATE_ERROR
      Tags:
        - Key: Name
          Value: !Sub CortexProcessing-${SCQSPrefix}
          PropagateAtLaunch: true
        - Key: Sitecore-QuickStart
          Value: !Sub ${SCQSPrefix}
          PropagateAtLaunch: true
  CortexProcessingLC:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      ImageId: !Sub '{{resolve:ssm:/${SCQSPrefix}/instance/ami/customid:1}}'
      InstanceType: !Ref CDInstanceType
      SecurityGroups:
        - !Ref SitecoreInstanceSG
      IamInstanceProfile: !Ref SCInstanceProfile
      KeyName: !Ref SitecoreKeyPair
      UserData: !Base64
        Fn::Join:
          - ''
          - - "<powershell>\n"
            - !Sub '${LocalQSScripts}\sc-role-prep.ps1 -Role "CortexProcessing" -SCQSPrefix '
            - !Sub '"${SCQSPrefix}"'
            - "\n"
            - !Sub '${LocalQSScripts}\sc-install-resources.ps1 -Role "CortexProcessing" -SCQSPrefix '
            - !Sub '"${SCQSPrefix}" -Region '
            - !Sub '"${AWS::Region}"'
            - "\n"
            - !Sub 'New-AWSQuickStartResourceSignal -Stack "${AWS::StackName}" -Region '
            - !Sub '"${AWS::Region}" -Resource "CortexProcessingASG"'
            - "\n"
            - "Write-AWSQuickStartStatus"
            - "\n"
            - "</powershell>\n"
  CortexReportingASG:
    Type: AWS::AutoScaling::AutoScalingGroup
    CreationPolicy: # Wait for the instance to signal that it is created
      ResourceSignal:
        Timeout: PT15M
        Count: 1
    UpdatePolicy:
      AutoScalingScheduledAction:
        IgnoreUnmodifiedGroupSizeProperties: true
      AutoScalingRollingUpdate:
        MinInstancesInService: 1
        MaxBatchSize: 1
        WaitOnResourceSignals: true
        PauseTime: PT15M
    Properties:
      LaunchConfigurationName: !Ref CortexReportingLC
      MaxSize: '2'
      MinSize: '1'
      DesiredCapacity: '1'
      VPCZoneIdentifier:
        - !Ref PrivateSubnet1A
        - !Ref PrivateSubnet2A
      TargetGroupARNs:
        - !Ref CRIntTargetGroup
      NotificationConfigurations:
        - TopicARN: !Ref AutoscalingSNS
          NotificationTypes:
            - autoscaling:EC2_INSTANCE_LAUNCH
            - autoscaling:EC2_INSTANCE_LAUNCH_ERROR
            - autoscaling:EC2_INSTANCE_TERMINATE
            - autoscaling:EC2_INSTANCE_TERMINATE_ERROR
      Tags:
        - Key: Name
          Value: !Sub CortexReporting-${SCQSPrefix}
          PropagateAtLaunch: true
        - Key: Sitecore-QuickStart
          Value: !Sub ${SCQSPrefix}
          PropagateAtLaunch: true
  CortexReportingLC:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      ImageId: !Sub '{{resolve:ssm:/${SCQSPrefix}/instance/ami/customid:1}}'
      InstanceType: !Ref CDInstanceType
      SecurityGroups:
        - !Ref SitecoreInstanceSG
      IamInstanceProfile: !Ref SCInstanceProfile
      KeyName: !Ref SitecoreKeyPair
      UserData: !Base64
        Fn::Join:
          - ''
          - - "<powershell>\n"
            - !Sub '${LocalQSScripts}\sc-role-prep.ps1 -Role "CortexReporting" -SCQSPrefix '
            - !Sub '"${SCQSPrefix}"'
            - "\n"
            - !Sub '${LocalQSScripts}\sc-install-resources.ps1 -Role "CortexReporting" -SCQSPrefix '
            - !Sub '"${SCQSPrefix}" -Region '
            - !Sub '"${AWS::Region}"'
            - "\n"
            - !Sub 'New-AWSQuickStartResourceSignal -Stack "${AWS::StackName}" -Region '
            - !Sub '"${AWS::Region}" -Resource "CortexReportingASG"'
            - "\n"
            - "Write-AWSQuickStartStatus"
            - "\n"
            - "</powershell>\n"
  IdentityASG:
    Type: AWS::AutoScaling::AutoScalingGroup
    CreationPolicy: # Wait for the instance to signal that it is created
      ResourceSignal:
        Timeout: PT15M
        Count: 1
    UpdatePolicy:
      AutoScalingScheduledAction:
        IgnoreUnmodifiedGroupSizeProperties: true
      AutoScalingRollingUpdate:
        MinInstancesInService: 1
        MaxBatchSize: 1
        WaitOnResourceSignals: true
        PauseTime: PT15M
    Properties:
      LaunchConfigurationName: !Ref IdentityLC
      MaxSize: '2'
      MinSize: '1'
      DesiredCapacity: '1'
      VPCZoneIdentifier:
        - !Ref PrivateSubnet1A
        - !Ref PrivateSubnet2A
      TargetGroupARNs:
        # - !Ref ISIntTargetGroup
        - !Ref ISExtTargetGroup
      NotificationConfigurations:
        - TopicARN: !Ref AutoscalingSNS
          NotificationTypes:
            - autoscaling:EC2_INSTANCE_LAUNCH
            - autoscaling:EC2_INSTANCE_LAUNCH_ERROR
            - autoscaling:EC2_INSTANCE_TERMINATE
            - autoscaling:EC2_INSTANCE_TERMINATE_ERROR
      Tags:
        - Key: Name
          Value: !Sub Identity-${SCQSPrefix}
          PropagateAtLaunch: true
        - Key: Sitecore-QuickStart
          Value: !Sub ${SCQSPrefix}
          PropagateAtLaunch: true
  IdentityLC:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      ImageId: !Sub '{{resolve:ssm:/${SCQSPrefix}/instance/ami/customid:1}}'
      InstanceType: !Ref CDInstanceType
      SecurityGroups:
        - !Ref SitecoreInstanceSG
      IamInstanceProfile: !Ref SCInstanceProfile
      KeyName: !Ref SitecoreKeyPair
      UserData: !Base64
        Fn::Join:
          - ''
          - - "<powershell>\n"
            - !Sub '${LocalQSScripts}\sc-role-prep.ps1 -Role "IdentityServer" -SCQSPrefix '
            - !Sub '"${SCQSPrefix}"'
            - "\n"
            - !Sub '${LocalQSScripts}\sc-install-resources.ps1 -Role "IdentityServer" -SCQSPrefix '
            - !Sub '"${SCQSPrefix}" -Region '
            - !Sub '"${AWS::Region}"'
            - "\n"
            - !Sub 'New-AWSQuickStartResourceSignal -Stack "${AWS::StackName}" -Region '
            - !Sub '"${AWS::Region}" -Resource "IdentityASG"'
            - "\n"
            - "Write-AWSQuickStartStatus"
            - "\n"
            - "</powershell>\n"
  MarketingAutomationASG:
    DependsOn: CollectionSearchASG # Marketing Automation requires that Collection Search be running or the services will not start, and the template will fail
    Type: AWS::AutoScaling::AutoScalingGroup
    CreationPolicy: # Wait for the instance to signal that it is created
      ResourceSignal:
        Timeout: PT15M
        Count: 1
    UpdatePolicy:
      AutoScalingScheduledAction:
        IgnoreUnmodifiedGroupSizeProperties: true
      AutoScalingRollingUpdate:
        MinInstancesInService: 1
        MaxBatchSize: 1
        WaitOnResourceSignals: true
        PauseTime: PT15M
    Properties:
      LaunchConfigurationName: !Ref MarketingAutomationLC
      MaxSize: '2'
      MinSize: '1'
      DesiredCapacity: '1'
      VPCZoneIdentifier:
        - !Ref PrivateSubnet1A
        - !Ref PrivateSubnet2A
      TargetGroupARNs:
        - !Ref MAIntTargetGroup
      NotificationConfigurations:
        - TopicARN: !Ref AutoscalingSNS
          NotificationTypes:
            - autoscaling:EC2_INSTANCE_LAUNCH
            - autoscaling:EC2_INSTANCE_LAUNCH_ERROR
            - autoscaling:EC2_INSTANCE_TERMINATE
            - autoscaling:EC2_INSTANCE_TERMINATE_ERROR
      Tags:
        - Key: Name
          Value: !Sub MarketingAutomation-${SCQSPrefix}
          PropagateAtLaunch: true
        - Key: Sitecore-QuickStart
          Value: !Sub ${SCQSPrefix}
          PropagateAtLaunch: true
  MarketingAutomationLC:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      ImageId: !Sub '{{resolve:ssm:/${SCQSPrefix}/instance/ami/customid:1}}'
      InstanceType: !Ref CDInstanceType
      SecurityGroups:
        - !Ref SitecoreInstanceSG
      IamInstanceProfile: !Ref SCInstanceProfile
      KeyName: !Ref SitecoreKeyPair
      UserData: !Base64
        Fn::Join:
          - ''
          - - "<powershell>\n"
            - !Sub '${LocalQSScripts}\sc-role-prep.ps1 -Role "MarketingAutomation" -SCQSPrefix '
            - !Sub '"${SCQSPrefix}"'
            - "\n"
            - !Sub '${LocalQSScripts}\sc-install-resources.ps1 -Role "MarketingAutomation" -SCQSPrefix '
            - !Sub '"${SCQSPrefix}" -Region '
            - !Sub '"${AWS::Region}"'
            - "\n"
            - !Sub 'New-AWSQuickStartResourceSignal -Stack "${AWS::StackName}" -Region '
            - !Sub '"${AWS::Region}" -Resource "MarketingAutomationASG"'
            - "\n"
            - "Write-AWSQuickStartStatus"
            - "\n"
            - "</powershell>\n"
  MarketingAutoRepASG:
    Type: AWS::AutoScaling::AutoScalingGroup
    CreationPolicy: # Wait for the instance to signal that it is created
      ResourceSignal:
        Timeout: PT15M
        Count: 1
    UpdatePolicy:
      AutoScalingScheduledAction:
        IgnoreUnmodifiedGroupSizeProperties: true
      AutoScalingRollingUpdate:
        MinInstancesInService: 1
        MaxBatchSize: 1
        WaitOnResourceSignals: true
        PauseTime: PT15M
    Properties:
      LaunchConfigurationName: !Ref MarketingAutoRepLC
      MaxSize: '2'
      MinSize: '1'
      DesiredCapacity: '1'
      VPCZoneIdentifier:
        - !Ref PrivateSubnet1A
        - !Ref PrivateSubnet2A
      TargetGroupARNs:
        - !Ref MARIntTargetGroup
      NotificationConfigurations:
        - TopicARN: !Ref AutoscalingSNS
          NotificationTypes:
            - autoscaling:EC2_INSTANCE_LAUNCH
            - autoscaling:EC2_INSTANCE_LAUNCH_ERROR
            - autoscaling:EC2_INSTANCE_TERMINATE
            - autoscaling:EC2_INSTANCE_TERMINATE_ERROR
      Tags:
        - Key: Name
          Value: !Sub MarketingAutomationReporting-${SCQSPrefix}
          PropagateAtLaunch: true
        - Key: Sitecore-QuickStart
          Value: !Sub ${SCQSPrefix}
          PropagateAtLaunch: true
  MarketingAutoRepLC:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      ImageId: !Sub '{{resolve:ssm:/${SCQSPrefix}/instance/ami/customid:1}}'
      InstanceType: !Ref CDInstanceType
      SecurityGroups:
        - !Ref SitecoreInstanceSG
      IamInstanceProfile: !Ref SCInstanceProfile
      KeyName: !Ref SitecoreKeyPair
      UserData: !Base64
        Fn::Join:
          - ''
          - - "<powershell>\n"
            - !Sub '${LocalQSScripts}\sc-role-prep.ps1 -Role "MarketingAutomationReporting" -SCQSPrefix '
            - !Sub '"${SCQSPrefix}"'
            - "\n"
            - !Sub '${LocalQSScripts}\sc-install-resources.ps1 -Role "MarketingAutomationReporting" -SCQSPrefix '
            - !Sub '"${SCQSPrefix}" -Region '
            - !Sub '"${AWS::Region}"'
            - "\n"
            - !Sub 'New-AWSQuickStartResourceSignal -Stack "${AWS::StackName}" -Region '
            - !Sub '"${AWS::Region}" -Resource "MarketingAutoRepASG"'
            - "\n"
            - "Write-AWSQuickStartStatus"
            - "\n"
            - "</powershell>\n"
  ProcessingASG:
    Type: AWS::AutoScaling::AutoScalingGroup
    CreationPolicy: # Wait for the instance to signal that it is created
      ResourceSignal:
        Timeout: PT15M
        Count: 1
    UpdatePolicy:
      AutoScalingScheduledAction:
        IgnoreUnmodifiedGroupSizeProperties: true
      AutoScalingRollingUpdate:
        MinInstancesInService: 1
        MaxBatchSize: 1
        WaitOnResourceSignals: true
        PauseTime: PT15M
    Properties:
      LaunchConfigurationName: !Ref ProcessingLC
      MaxSize: '2'
      MinSize: '1'
      DesiredCapacity: '1'
      VPCZoneIdentifier:
        - !Ref PrivateSubnet1A
        - !Ref PrivateSubnet2A
      TargetGroupARNs:
        - !Ref PrcIntTargetGroup
      NotificationConfigurations:
        - TopicARN: !Ref AutoscalingSNS
          NotificationTypes:
            - autoscaling:EC2_INSTANCE_LAUNCH
            - autoscaling:EC2_INSTANCE_LAUNCH_ERROR
            - autoscaling:EC2_INSTANCE_TERMINATE
            - autoscaling:EC2_INSTANCE_TERMINATE_ERROR
      Tags:
        - Key: Name
          Value: !Sub Processing-${SCQSPrefix}
          PropagateAtLaunch: true
        - Key: Sitecore-QuickStart
          Value: !Sub ${SCQSPrefix}
          PropagateAtLaunch: true
  ProcessingLC:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      ImageId: !Sub '{{resolve:ssm:/${SCQSPrefix}/instance/ami/customid:1}}'
      InstanceType: !Ref CDInstanceType
      SecurityGroups:
        - !Ref SitecoreInstanceSG
      IamInstanceProfile: !Ref SCInstanceProfile
      KeyName: !Ref SitecoreKeyPair
      UserData: !Base64
        Fn::Join:
          - ''
          - - "<powershell>\n"
            - !Sub '${LocalQSScripts}\sc-role-prep.ps1 -Role "Prc" -SCQSPrefix '
            - !Sub '"${SCQSPrefix}"'
            - "\n"
            - !Sub '${LocalQSScripts}\sc-install-resources.ps1 -Role "Prc" -SCQSPrefix '
            - !Sub '"${SCQSPrefix}" -Region '
            - !Sub '"${AWS::Region}"'
            - "\n"
            - !Sub 'New-AWSQuickStartResourceSignal -Stack "${AWS::StackName}" -Region '
            - !Sub '"${AWS::Region}" -Resource "ProcessingASG"'
            - "\n"
            - "Write-AWSQuickStartStatus"
            - "\n"
            - "</powershell>\n"
  ReferenceDataASG:
    Type: AWS::AutoScaling::AutoScalingGroup
    CreationPolicy: # Wait for the instance to signal that it is created
      ResourceSignal:
        Timeout: PT15M
        Count: 1
    UpdatePolicy:
      AutoScalingScheduledAction:
        IgnoreUnmodifiedGroupSizeProperties: true
      AutoScalingRollingUpdate:
        MinInstancesInService: 1
        MaxBatchSize: 1
        WaitOnResourceSignals: true
        PauseTime: PT15M
    Properties:
      LaunchConfigurationName: !Ref ReferenceDataLC
      MaxSize: '2'
      MinSize: '1'
      DesiredCapacity: '1'
      VPCZoneIdentifier:
        - !Ref PrivateSubnet1A
        - !Ref PrivateSubnet2A
      TargetGroupARNs:
        - !Ref RDIntTargetGroup
      NotificationConfigurations:
        - TopicARN: !Ref AutoscalingSNS
          NotificationTypes:
            - autoscaling:EC2_INSTANCE_LAUNCH
            - autoscaling:EC2_INSTANCE_LAUNCH_ERROR
            - autoscaling:EC2_INSTANCE_TERMINATE
            - autoscaling:EC2_INSTANCE_TERMINATE_ERROR
      Tags:
        - Key: Name
          Value: !Sub ReferenceData-${SCQSPrefix}
          PropagateAtLaunch: true
        - Key: Sitecore-QuickStart
          Value: !Sub ${SCQSPrefix}
          PropagateAtLaunch: true
  ReferenceDataLC:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      ImageId: !Sub '{{resolve:ssm:/${SCQSPrefix}/instance/ami/customid:1}}'
      InstanceType: !Ref CDInstanceType
      SecurityGroups:
        - !Ref SitecoreInstanceSG
      IamInstanceProfile: !Ref SCInstanceProfile
      KeyName: !Ref SitecoreKeyPair
      UserData: !Base64
        Fn::Join:
          - ''
          - - "<powershell>\n"
            - !Sub '${LocalQSScripts}\sc-role-prep.ps1 -Role "ReferenceData" -SCQSPrefix '
            - !Sub '"${SCQSPrefix}"'
            - "\n"
            - !Sub '${LocalQSScripts}\sc-install-resources.ps1 -Role "ReferenceData" -SCQSPrefix '
            - !Sub '"${SCQSPrefix}" -Region '
            - !Sub '"${AWS::Region}"'
            - "\n"
            - !Sub 'New-AWSQuickStartResourceSignal -Stack "${AWS::StackName}" -Region '
            - !Sub '"${AWS::Region}" -Resource "ReferenceDataASG"'
            - "\n"
            - "Write-AWSQuickStartStatus"
            - "\n"
            - "</powershell>\n"
  ReportingASG:
    Type: AWS::AutoScaling::AutoScalingGroup
    CreationPolicy: # Wait for the instance to signal that it is created
      ResourceSignal:
        Timeout: PT15M
        Count: 1
    UpdatePolicy:
      AutoScalingScheduledAction:
        IgnoreUnmodifiedGroupSizeProperties: true
      AutoScalingRollingUpdate:
        MinInstancesInService: 1
        MaxBatchSize: 1
        WaitOnResourceSignals: true
        PauseTime: PT15M
    Properties:
      LaunchConfigurationName: !Ref ReportingLC
      MaxSize: '2'
      MinSize: '1'
      DesiredCapacity: '1'
      VPCZoneIdentifier:
        - !Ref PrivateSubnet1A
        - !Ref PrivateSubnet2A
      TargetGroupARNs:
        - !Ref RepIntTargetGroup
      NotificationConfigurations:
        - TopicARN: !Ref AutoscalingSNS
          NotificationTypes:
            - autoscaling:EC2_INSTANCE_LAUNCH
            - autoscaling:EC2_INSTANCE_LAUNCH_ERROR
            - autoscaling:EC2_INSTANCE_TERMINATE
            - autoscaling:EC2_INSTANCE_TERMINATE_ERROR
      Tags:
        - Key: Name
          Value: !Sub Reporting-${SCQSPrefix}
          PropagateAtLaunch: true
        - Key: Sitecore-QuickStart
          Value: !Sub ${SCQSPrefix}
          PropagateAtLaunch: true
  ReportingLC:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      ImageId: !Sub '{{resolve:ssm:/${SCQSPrefix}/instance/ami/customid:1}}'
      InstanceType: !Ref CDInstanceType
      SecurityGroups:
        - !Ref SitecoreInstanceSG
      IamInstanceProfile: !Ref SCInstanceProfile
      KeyName: !Ref SitecoreKeyPair
      UserData: !Base64
        Fn::Join:
          - ''
          - - "<powershell>\n"
            - !Sub '${LocalQSScripts}\sc-role-prep.ps1 -Role "Rep" -SCQSPrefix '
            - !Sub '"${SCQSPrefix}"'
            - "\n"
            - !Sub '${LocalQSScripts}\sc-install-resources.ps1 -Role "Rep" -SCQSPrefix '
            - !Sub '"${SCQSPrefix}" -Region '
            - !Sub '"${AWS::Region}"'
            - "\n"
            - !Sub 'New-AWSQuickStartResourceSignal -Stack "${AWS::StackName}" -Region '
            - !Sub '"${AWS::Region}" -Resource "ReportingASG"'
            - "\n"
            - "Write-AWSQuickStartStatus"
            - "\n"
            - "</powershell>\n"