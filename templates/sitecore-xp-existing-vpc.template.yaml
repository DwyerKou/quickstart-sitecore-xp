AWSTemplateFormatVersion: 2010-09-09
Description: 'Deploys Sitecore into an existing VPC  (qs-1qjogjg57)'
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Network configuration
        Parameters:
          - VPCCIDR
          - VPCID
          - PrivateSubnet1A
          - PrivateSubnet2A
          - PublicSubnet1
          - PublicSubnet2
      - Label:
          default: Sitecore Networking Configuration
        Parameters:
          - CDDNSName
          - CMDNSName
          - ISDNSName
          - IntDNS
          - IntVPCR53Zone
          - VPCPrivateDNS # true/false - this is here for instances where deploying into a VPC that has DHCP Option Sets that utilize private (non-Route53) DNS servers. EX: Active Directory provided DNS
          - ExternalCertificateARN
          - ExternalCertFQDN
          - ExternalR53ZoneID
      - Label:
          default: Sitecore Configuration
        Parameters:
          - CDMinSize
          - CDMaxSize
          - CDDesiredCapacity
          - CDInstanceType
          - CDScalingMetric
          - CDScalingMetricValue
          - CMMinSize
          - CMMaxSize
          - CMInstanceType
          - CMScalingMetric
          - CMScalingMetricValue
          - SitecoreKeyPair
          - SitecorePrefix
          - SitecoreS3Bucket
          - SCResourcesPrefix
          - SCLicensePrefix
          - SOLRCorePrefix
          - SOLRUrl
          - EnvironmentType
          - SCLogLevel
          - CorsOrigins
          - EmailNotifications
          - LambdaZipsBucketName
      - Label:
          default: SQL Server configuration
        Parameters:
          - DBInstanceClass
          - DBAutoMinorVersionUpgrade
          - SQLEngineEdition
          - SQLEngineVersion
          - VolumeSize
          - VolumeType
          - VolumeIops
          - BackupRetentionPeriod
      - Label:
          default: Redis ElastiCache configuration
        Parameters:
          - CacheNodeType
          - RedisPort
      - Label:
          default: AWS Quick Start configuration
        Parameters:
          - QSS3BucketName
          - QSS3BucketRegion
          - QSS3KeyPrefix
    ParameterLabels:
      # VPC
      VPCID:
        default: VPC ID
      VPCCIDR:
        default: VPC CIDR
      PrivateSubnet1A:
        default: Private subnet 1 ID
      PrivateSubnet2A:
        default: Private subnet 2 ID
      PublicSubnet1:
        default: Public subnet 1 ID
      PublicSubnet2:
        default: Public subnet 2 ID
      # Sitecore Network Configuration
      CDDNSName:
        default: DNS name for Content Delivery Role
      CMDNSName:
        default: DNS name for Content Management Role
      ISDNSName:
        default: DNS name for Identity Server Role
      IntDNS:
        default: '[OPTIONAL] Internal DNS suffix for the Sitecore installation'
      IntVPCR53Zone:
        default: The internal Route53 hosted zone ID
      VPCPrivateDNS:
        default: Private (Non-Route53) DNS
      ExternalCertificateARN:
        default: External Amazon Certificate Manager ARN
      ExternalCertFQDN:
        default: External Certificate Domain Name
      ExternalR53ZoneID:
        default: External Route 53 Zone ID
      # Sitecore Configuration
      CDMinSize:
        default: Min number of Content Delivery instances # Currently applied to all instances
      CDMaxSize:
        default: Max number of Content Delivery instances # Currently applied to all instances
      CDDesiredCapacity:
        default: The current number of desired Content Delivery instances # Currently applied to all instances
      CDInstanceType:
        default: The instance type to be used for the Content Delivery instances # Currently applied to all instances
      CDScalingMetric:
        default: The metric used to determine scalling of the Content Delivery role
      CDScalingMetricValue:
        default: The metric value used to determine scalling of the Content Delivery role
      CMMinSize:
        default: Min number of Content Management instance
      CMMaxSize:
        default: Max number of Content Management instance
      CMInstanceType:
        default: The instance type to be used for the Content Management instances
      CMScalingMetric:
        default: The metric used to determine scalling of the Content Management role
      CMScalingMetricValue:
        default: The metric value used to determine scalling of the Content Management role
      SitecoreKeyPair:
        default: EC2 Key Pair for Sitecore instances
      SitecorePrefix:
        default: The Prefix to be used for the Sitecore installation
      SitecoreS3Bucket:
        default: S3 Bucket where Sitecore artifacts are located (Resource files, licence files.) This deployment will put objects into this bucket.
      SCResourcesPrefix:
        default: 'The prefix where Sitecore installation files are located (eg: sitecorefiles/)'
      SCLicensePrefix:
        default: 'The prefix where the sitecore license.zip is located (eg: licence/)'
      SOLRCorePrefix:
        default: The prefix used for the SOLR Cores
      SOLRUrl:
        default: The Url for the SOLR deployment
      EnvironmentType:
        default: The Sitecore Environment Type
      SCLogLevel:
        default: The Sitecore Log Level
      CorsOrigins:
        default: The Sitecore Cors Origins
      EmailNotifications:
        default: The email address for receiving notifications on instance scaling.
      LambdaZipsBucketName:
        default: '[OPTIONAL] The name of the S3 bucket where the Lambda zip files should be placed. If you leave this parameter blank, an S3 bucket will be created.'
      DBInstanceClass:
        default: To be udpated
      DBAutoMinorVersionUpgrade:
        default: Database auto minor version upgrade
      SQLEngineEdition:
        default: MSSQL database engine edition
      SQLEngineVersion:
        default: MSSQL database engine version
      VolumeIops:
        default: Data volume IOPS
      VolumeSize:
        default: Data volume size
      VolumeType:
        default: Data volume type
      BackupRetentionPeriod:
        default: Retention Period
      # Redis Configuration
      CacheNodeType:
        default: Redis cache node type
      RedisPort:
        default: Redis Port
      # Quick Start Config Params
      QSS3BucketName:
        default: Quick Start S3 bucket name
      QSS3BucketRegion:
        default: Quick Start S3 bucket region
      QSS3KeyPrefix:
        default: Quick Start S3 key prefix
Parameters:
  VPCID:
    Description: ID of the VPC (e.g., vpc-0343606e)
    Type: AWS::EC2::VPC::Id
  VPCCIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.0.0/16
    Description: CIDR Block for the VPC
    Type: String
  PrivateSubnet1A:
    Description: ID of the private subnet 1 in Availability Zone 1 (e.g., subnet-a0246dcd)
    Type: AWS::EC2::Subnet::Id
  PrivateSubnet2A:
    Description: ID of the private subnet 2 in Availability Zone 2 (e.g., subnet-a0246dcd)
    Type: AWS::EC2::Subnet::Id
  PublicSubnet1:
    Type: AWS::EC2::Subnet::Id
    Description: The public subnet in Availability Zone 1
  PublicSubnet2:
    Type: AWS::EC2::Subnet::Id
    Description: The public subnet in Availability Zone 2
  # Sitecore Networking Configuration
  CDDNSName:
    Type: String
    Description: DNS name for Content Delivery Role. An alias for the ELB should be created after the stack creation
  CMDNSName:
    Type: String
    Description: DNS name for Content Managment Role. An alias for the ELB should be created after the stack creation
  ISDNSName:
    Type: String
    Description: DNS name for Identity Server Role. An alias for the ELB should be created after the stack creation
  IntDNS:
    Type: String
    Default: ''
    Description: Internal DNS name. If left blank, one will be generated for you. If you have a private Route53 hosted zone or a private managed DNS connected to your VPC, please provide the DNS suffix of the hosted zone.
  IntVPCR53Zone:
    Type: String
    Default: ''
    Description: "[OPTIONAL] If you already have a private Route53 hosted zone connected to your VPC, please provide the Route53 Hosted Zone ID"
  VPCPrivateDNS:
    Type: String
    AllowedValues:
      - 'True'
      - 'False'
    Default: 'False'
    Description: "Select 'True' if you have your own provided DNS servers for your VPC. Should you have your own DNS servers, 
                  you will need to create cname entries for the sitecore roles. Please see the deloyment guide for details.
                  Leave as 'False' if you have a private Route53 hosted zone connected to your VPC."
  ExternalCertificateARN:
    Type: String
    Description: "[OPTIONAL] Provide the ARN of the wildcard certificate (E.g: *.example.com) created in Amazon Certificate Manager. If not provided, 
                  a wildcard certificate will be created for you. If you provide an ARN of an existing certificate, you do not need to provide details for the External Certificate Domain or the External Route 53 Zone ID."
  ExternalCertFQDN: 
    Type: String
    Description: "[OPTIONAL] The external domain name for the Sitecore deployment (E.g: example.com). This will be created in ACM as a wildcard certificate (E.g: *.example.com) if no certificate ARN was provided above."
  ExternalR53ZoneID: 
    Type: String
    Description: "[OPTIONAL] The R53 Hosted Zone ID of the above domain name provided if you require a certificate generated and validation to be done via DNS. If no ID is provided, validation will be done via email."
  #Sitecore Configuration
  CDMinSize:
    Type: String
    Default: '1'
    Description: The minimum number of Content Delivery instances to be available (this currently applies to ALL roles)
  CDMaxSize:
    Type: String
    Default: '2'
    Description: The maximum number of Content Delivery instances to be available (this currently applies to ALL roles)
  CDDesiredCapacity:
    Type: String
    Default: '1'
    Description: The desired number of Content Delivery instances to be available (this currently applies to ALL roles)
  CDInstanceType:
    AllowedValues:
      - m4.large
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
      - m4.10xlarge
      - m3.medium
      - m3.large
      - m3.xlarge
      - m3.2xlarge
      - c4.large
      - c4.xlarge
      - c4.2xlarge
      - c4.4xlarge
      - c4.8xlarge
      - c3.large
      - c3.xlarge
      - c3.2xlarge
      - c3.4xlarge
      - c3.8xlarge
      - r3.large
      - r3.xlarge
      - r3.2xlarge
      - r3.4xlarge
      - r3.8xlarge
      - i2.xlarge
      - i2.2xlarge
      - i2.4xlarge
      - i2.8xlarge
    ConstraintDescription: Choose an instance type. m3.medium or larger recommended.
    Default: m4.large
    Description: Web server instance type (this currently applies to ALL roles)
    Type: String
  CDScalingMetric:
    Description: The metric used to determine scalling of the Content Delivery role
    Default: ASGAverageCPUUtilization
    AllowedValues:
      - ASGAverageCPUUtilization
      - ASGAverageNetworkIn
      - ALBRequestCountPerTarget
    Type: String
  CDScalingMetricValue:
    Description: The value required for the Scaling Metric (For ASGAverageNetworkIn this value is in bytes)
    Default: 300
    Type: Number
  CMMinSize:
    Type: String
    Default: '1'
    Description: The minimum number of Content Management instances to be available (this currently applies to ALL roles)
  CMMaxSize:
    Type: String
    Default: '2'
    Description: The maximum number of Content Management instances to be available (this currently applies to ALL roles)
  CMInstanceType:
    AllowedValues:
      - m4.large
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
      - m4.10xlarge
      - m3.medium
      - m3.large
      - m3.xlarge
      - m3.2xlarge
      - c4.large
      - c4.xlarge
      - c4.2xlarge
      - c4.4xlarge
      - c4.8xlarge
      - c3.large
      - c3.xlarge
      - c3.2xlarge
      - c3.4xlarge
      - c3.8xlarge
      - r3.large
      - r3.xlarge
      - r3.2xlarge
      - r3.4xlarge
      - r3.8xlarge
      - i2.xlarge
      - i2.2xlarge
      - i2.4xlarge
      - i2.8xlarge
    ConstraintDescription: Choose an instance type. m3.medium or larger recommended.
    Default: m4.large
    Description: Web server instance type for the Content Management role
    Type: String
  CMScalingMetric:
    Description: The metric used to determine scalling of the Content Management role
    Default: ASGAverageCPUUtilization
    AllowedValues:
      - ASGAverageCPUUtilization
      - ASGAverageNetworkIn
      - ALBRequestCountPerTarget
    Type: String
  CMScalingMetricValue:
    Description: The value required for the Scaling Metric (For ASGAverageNetworkIn this value is in bytes)
    Default: 300
    Type: Number
  SitecoreKeyPair:
    Type: AWS::EC2::KeyPair::KeyName
    Description: The EC2 Key Pair to use with the Sitecore instances
  SitecorePrefix:
    Type: String
    Description: The prefix to be used for the sitecore installation. This is limited to 8 characters.
    MinLength: 1
    MaxLength: 8
    AllowedPattern: ^[a-zA-Z0-9]*
  SitecoreS3Bucket:
    Type: String
    Description: The name of the S3 Bucket where the Sitecore resources (instalation files, license file, etc.) reside.
  SCResourcesPrefix:
    Type: String
    Description: The prefix for the sitecore install files.
    Default: resources/
  SCLicensePrefix:
    Type: String
    Description: 'The prefix for the sitecore licence.zip file. eg: license/'
    Default: license/
  SOLRCorePrefix:
    Type: String
    Description: The prefix used for the SOLR Cores
  SOLRUrl:
    Type: String
    Description: The URL of your Solr server/cluster.
    Default: ''
  EnvironmentType:
    Description: The type of deployment
    AllowedValues:
      - Production
      - Development
    Default: Production
    Type: String
  SCLogLevel:
    AllowedValues:
      - Information
      - Debug
      - Error
      - Warning
      - None
    Default: Information
    Type: String
  CorsOrigins:
    Type: String
  EmailNotifications:
    Type: String
  LambdaZipsBucketName:
    Type: String
    Default: ''
  # RDS MS SQL
  DBAutoMinorVersionUpgrade:
    AllowedValues:
      - 'true'
      - 'false'
    Default: 'false'
    Description: Select true/false to setup Auto Minor Version upgrade.
    Type: String
  DBInstanceClass:
    AllowedValues:
      - db.m5.large
      - db.m5.xlarge
      - db.m5.2xlarge
      - db.m5.4xlarge
      - db.m5.12xlarge
      - db.m5.24xlarge
      - db.m4.large
      - db.m4.xlarge
      - db.m4.2xlarge
      - db.m4.4xlarge
      - db.m4.10xlarge
      - db.m4.16xlarge
      - db.r4.large
      - db.r4.xlarge
      - db.r4.2xlarge
      - db.r4.4xlarge
      - db.r4.8xlarge
      - db.r4.16xlarge
    ConstraintDescription: 'Must select a valid database instance type.'
    Default: db.r4.2xlarge
    Description: 'The name of the compute and memory capacity class of the database instance.'
    Type: String
  SQLEngineEdition:
    AllowedValues:
      - sqlserver-ee
      - sqlserver-se
      - sqlserver-ex
      - sqlserver-web
    ConstraintDescription: 'Must select a MSSQL Database Engine Edition.'
    Default: sqlserver-se
    Description: 'MSSQL Database Engine Edition.'
    Type: String
  SQLEngineVersion:
    AllowedValues:
      - 14.00.3223.3.v1
      - 14.00.3192.2.v1
      - 14.00.3049.1.v1
      - 14.00.3035.2.v1
      - 14.00.3015.40.v1
      - 14.00.1000.169.v1
    ConstraintDescription: 'Must select a MSSQL Database Engine Version.'
    Default: 14.00.3223.3.v1
    Description: 'MSSQL Database Engine Version.'
    Type: String
  BackupRetentionPeriod:
    Default: 7
    Description: The number of days for which automated backups are retained. Setting this parameter to a positive number enables backups. Setting this parameter to 0 disables automated backups.
    Type: Number
  VolumeIops:
    Default: 1000
    Description:
      Provisioned IOPS for the SQL Data, Logs and TempDb volumes. This
      parameter is only applicable when SQL Server Volume Type is set to "io1"
    MaxValue: '20000'
    MinValue: '100'
    Type: Number
  VolumeSize:
    Default: 500
    Description: Volume size for the SQL Data, Logs and TempDb volumes, in GiB
    MaxValue: '16000'
    MinValue: '100'
    Type: Number
  VolumeType:
    AllowedValues:
      - gp2
      - io1
    Default: gp2
    Description: Volume type for the SQL Data, Logs and TempDb volumes
    Type: String
  # Redis Configuration
  CacheNodeType:
    Description: The instance type the nodes will launch under.
    Type: String
    Default: cache.m4.large
    AllowedValues:
      - cache.t2.micro
      - cache.t2.small
      - cache.t2.medium
      - cache.m4.large
      - cache.m4.xlarge
      - cache.m4.xlarge
      - cache.m4.4xlarge
      - cache.r4.large
      - cache.r4.xlarge
      - cache.r4.2xlarge
      - cache.r4.4xlarge
      - cache.r4.8xlarge
  RedisPort:
    Type: Number
    Default: 6379
  # Quick Start Confguration
  QSS3BucketName:
    AllowedPattern: ^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$
    ConstraintDescription:
      Quick Start bucket name can include numbers, lowercase
      letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen
      (-).
    Default: aws-quickstart
    Description:
      S3 bucket name for the Quick Start assets. Quick Start bucket name
      can include numbers, lowercase letters, uppercase letters, and hyphens (-).
      It cannot start or end with a hyphen (-).
    Type: String
  QSS3BucketRegion:
    Default: 'us-east-1'
    Description: 'The AWS Region where the Quick Start S3 bucket (QSS3BucketName) is hosted. When using your own bucket, you must specify this value.'
    Type: String
  QSS3KeyPrefix:
    AllowedPattern: ^[0-9a-zA-Z-/]*$
    ConstraintDescription:
      Quick Start key prefix can include numbers, lowercase letters,
      uppercase letters, hyphens (-), and forward slash (/).
    Default: quickstart-sitecore-xp/
    Description:
      S3 key prefix for the Quick Start assets. Quick Start key prefix
      can include numbers, lowercase letters, uppercase letters, hyphens (-), and
      forward slash (/).
    Type: String
Rules:
  CDInstanceNumbers:
    Assertions:
      - AssertDescription: Maximum number of Content Delivery instances must be larger than the minimum number specified.
        Assert: !Not [!Equals [!Ref CDMinSize, !Ref CDMaxSize]]
  CMInstanceNumbers:
    Assertions:
      - AssertDescription: Maximum number of Content Management instances must be larger than the minimum number specified.
        Assert: !Not [!Equals [!Ref CMMinSize, !Ref CMMaxSize]]
Conditions:
  UsingDefaultBucket: !Equals [!Ref QSS3BucketName, 'aws-quickstart']
  CreateLambdaZipsBucket: !Equals [!Ref 'LambdaZipsBucketName', '']
  InternalDNSName: !Equals [!Ref 'IntDNS', '']
  CreateDevSolr: !Equals [!Ref 'SOLRUrl', '']
  CreateInternalR53: !Equals [!Ref 'VPCPrivateDNS', 'False'] # If there is no provided internal DNS, then create a R53 hosted Zone
  CreateExternalCertificate: !Equals [!Ref 'ExternalCertificateARN', '']

Resources:
  # Local region S3 bucket for Lambda functions
  LambdaZipsBucket:
    Type: AWS::S3::Bucket
    Condition: CreateLambdaZipsBucket
  AutoscalingSNS:
    Type: AWS::SNS::Topic
  ASGSubscription:
    Type: AWS::SNS::Subscription
    Properties:
      Endpoint: !Ref EmailNotifications
      Protocol: email
      TopicArn: !Ref 'AutoscalingSNS'
  # Create required Security Groups
  SitecoreInstanceSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Used for the Sitecore Instances
      VpcId: !Ref VPCID
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 3389
          ToPort: 3389
          CidrIp: !Ref VPCCIDR
          Description: RDP Traffic from within the VPC
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: !Ref VPCCIDR
          Description: HTTPS Traffic from within the VPC
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: !Ref VPCCIDR
          Description: HTTP Traffic from within the VPC
        - IpProtocol: tcp # TODO Add conditional for this rule
          FromPort: 8983
          ToPort: 8983
          CidrIp: !Ref VPCCIDR
          Description: HTTPS Traffic from within the VPC
  LoadBalancerInternalSG:
    # DependsOn: SitecoreInstanceSG
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Used for the Internal ALB
      VpcId: !Ref VPCID
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          SourceSecurityGroupId: !Ref SitecoreInstanceSG
          Description: HTTPS Traffic from within the VPC
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          SourceSecurityGroupId: !Ref SitecoreInstanceSG
          Description: HTTPS Traffic from within the VPC
        - IpProtocol: tcp
          FromPort: 8983
          ToPort: 8983
          SourceSecurityGroupId: !Ref SitecoreInstanceSG
          Description: HTTPS Traffic from within the VPC
  LoadBalancerExternalSG:
    # DependsOn: SitecoreServerSG
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Used for the External ALB
      VpcId: !Ref VPCID
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
  RDSsqlSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: SG for RDS MSSQL.
      VpcId: !Ref VPCID
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 1433
          ToPort: 1433
          CidrIp: !Ref 'VPCCIDR'
  RedisSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Used for the Redis ElastiCache cluster
      VpcId: !Ref VPCID
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: !Ref RedisPort
          ToPort: !Ref RedisPort
          CidrIp: !Ref 'VPCCIDR'
  # Internal ALB
  LoadBalancerInternal:
    # DependsOn: LoadBalancerInternalSG
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Type: application
      Scheme: internal
      IpAddressType: ipv4
      SecurityGroups:
        - !Ref LoadBalancerInternalSG
      Subnets:
        - !Ref PrivateSubnet1A
        - !Ref PrivateSubnet2A
  # External ALB
  LoadBalancerExternal:
    # DependsOn: LoadBalancerExternalSG
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Type: application
      Scheme: internet-facing
      IpAddressType: ipv4
      SecurityGroups:
        - !Ref LoadBalancerExternalSG
      Subnets:
        - !Ref PublicSubnet1
        - !Ref PublicSubnet2
  # XConnect NLB
  XConnectNLB:
    # DependsOn: LoadBalancerInternalSG
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Type: network
      Scheme: internal
      IpAddressType: ipv4
      Subnets:
        - !Ref PrivateSubnet1A
        - !Ref PrivateSubnet2A
  CollectionNLB:
    # DependsOn: LoadBalancerInternalSG
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Type: network
      Scheme: internal
      IpAddressType: ipv4
      Subnets:
        - !Ref PrivateSubnet1A
        - !Ref PrivateSubnet2A
  RefDataNLB:
    # DependsOn: LoadBalancerInternalSG
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Type: network
      Scheme: internal
      IpAddressType: ipv4
      Subnets:
        - !Ref PrivateSubnet1A
        - !Ref PrivateSubnet2A
  MarketAutoRepNLB:
    # DependsOn: LoadBalancerInternalSG
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Type: network
      Scheme: internal
      IpAddressType: ipv4
      Subnets:
        - !Ref PrivateSubnet1A
        - !Ref PrivateSubnet2A
  MarketAutoNLB:
    # DependsOn: LoadBalancerInternalSG
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Type: network
      Scheme: internal
      IpAddressType: ipv4
      Subnets:
        - !Ref PrivateSubnet1A
        - !Ref PrivateSubnet2A
  CortexRepNLB:
    # DependsOn: LoadBalancerInternalSG
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Type: network
      Scheme: internal
      IpAddressType: ipv4
      Subnets:
        - !Ref PrivateSubnet1A
        - !Ref PrivateSubnet2A
  CortexProcNLB:
    # DependsOn: LoadBalancerInternalSG
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Type: network
      Scheme: internal
      IpAddressType: ipv4
      Subnets:
        - !Ref PrivateSubnet1A
        - !Ref PrivateSubnet2A


  # Parameter entries for internal & External ALB - put here so that Parameter Stack not waiting
  InternalALBURL:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Join #!Sub /${AWS::StackName}/net/private/alb
        - ''
        - - '/'
          - !GetAtt FunctionsStack.Outputs.SCQSPrefix
          - '/net/private/alb'
      Description: Parameter for the Sitecore XP1 Quick Start
      Type: String
      Value: !GetAtt LoadBalancerInternal.DNSName
  ExternalALBURL:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Join #!Sub /${AWS::StackName}/net/public/alb
        - ''
        - - '/'
          - !GetAtt FunctionsStack.Outputs.SCQSPrefix
          - '/net/public/alb'
      Description: Parameter for the Sitecore XP1 Quick Start
      Type: String
      Value: !GetAtt LoadBalancerExternal.DNSName
  CollNLBURL:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Join #!Sub /${AWS::StackName}/net/public/alb
        - ''
        - - '/'
          - !GetAtt FunctionsStack.Outputs.SCQSPrefix
          - '/net/collection/nlb'
      Description: Parameter for the Sitecore XP1 Quick Start
      Type: String
      Value: !GetAtt CollectionNLB.DNSName
  RefDataNLBURL:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Join #!Sub /${AWS::StackName}/net/public/alb
        - ''
        - - '/'
          - !GetAtt FunctionsStack.Outputs.SCQSPrefix
          - '/net/RefData/nlb'
      Description: Parameter for the Sitecore XP1 Quick Start
      Type: String
      Value: !GetAtt RefDataNLB.DNSName
  MarketAutoRepNLBURL:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Join #!Sub /${AWS::StackName}/net/public/alb
        - ''
        - - '/'
          - !GetAtt FunctionsStack.Outputs.SCQSPrefix
          - '/net/MarketAutoRep/nlb'
      Description: Parameter for the Sitecore XP1 Quick Start
      Type: String
      Value: !GetAtt MarketAutoRepNLB.DNSName
  MarketAutoNLBURL:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Join #!Sub /${AWS::StackName}/net/public/alb
        - ''
        - - '/'
          - !GetAtt FunctionsStack.Outputs.SCQSPrefix
          - '/net/MarketAuto/nlb'
      Description: Parameter for the Sitecore XP1 Quick Start
      Type: String
      Value: !GetAtt MarketAutoNLB.DNSName
  CortexProcNLBURL:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Join #!Sub /${AWS::StackName}/net/public/alb
        - ''
        - - '/'
          - !GetAtt FunctionsStack.Outputs.SCQSPrefix
          - '/net/CortexProc/nlb'
      Description: Parameter for the Sitecore XP1 Quick Start
      Type: String
      Value: !GetAtt CortexProcNLB.DNSName
  CortexRepNLBURL:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Join #!Sub /${AWS::StackName}/net/public/alb
        - ''
        - - '/'
          - !GetAtt FunctionsStack.Outputs.SCQSPrefix
          - '/net/CortexRep/nlb'
      Description: Parameter for the Sitecore XP1 Quick Start
      Type: String
      Value: !GetAtt CortexRepNLB.DNSName
  XConnectNLBURL:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Join #!Sub /${AWS::StackName}/net/public/alb
        - ''
        - - '/'
          - !GetAtt FunctionsStack.Outputs.SCQSPrefix
          - '/net/xconnect/nlb'
      Description: Parameter for the Sitecore XP1 Quick Start
      Type: String
      Value: !GetAtt XConnectNLB.DNSName

  # Sitecore Route 53 Stack
  R53Stack:
    Type: AWS::CloudFormation::Stack
    Condition: CreateInternalR53
    Properties:
      TemplateURL: 
        !Sub
          - 'https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}templates/sitecore-xp-r53.template.yaml'
          - S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]
            S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      Parameters:
        InternalR53DNS: !If [InternalDNSName, !Sub '${AWS::Region}.sitecore.internal', !Ref IntDNS]
        VPCID: !Ref VPCID
        LoadBalancerInternalDNS: !GetAtt LoadBalancerInternal.DNSName
        XConnectNLBDNS: !GetAtt XConnectNLB.DNSName
        CollectionNLBDNS: !GetAtt CollectionNLB.DNSName
        RefDataNLBDNS: !GetAtt RefDataNLB.DNSName
        MarketAutoRepNLBDNS: !GetAtt MarketAutoRepNLB.DNSName
        MarketAutoNLBDNS: !GetAtt MarketAutoNLB.DNSName
        CortexRepNLBDNS: !GetAtt CortexRepNLB.DNSName
        CortexProcNLBDNS: !GetAtt CortexProcNLB.DNSName
        IntVPCR53Zone: !Ref IntVPCR53Zone
        SOLRUrl: !Ref SOLRUrl
        
  # Sitecore Security Stack
  SecurityStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: 
        !Sub
          - 'https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}templates/sitecore-xp-security.template.yaml'
          - S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]
            S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      Parameters:
        SitecoreS3Bucket: !Ref SitecoreS3Bucket
        QSS3BucketName: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
        QSS3KeyPrefix: !Ref QSS3KeyPrefix
        LambdaZipsBucketName:
          !If [
            CreateLambdaZipsBucket,
            !Ref LambdaZipsBucket,
            !Ref LambdaZipsBucketName,
          ]
  # Create lambda functions
  FunctionsStack:
    Type: 'AWS::CloudFormation::Stack'
    # DependsOn: 
    #   - SecurityStack
    Properties:
      TemplateURL: !Sub
          - 'https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}templates/sitecore-xp-functions.template.yaml'
          - S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]
            S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      Parameters:
        LambdaZipsBucketName:
          !If [
            CreateLambdaZipsBucket,
            !Ref LambdaZipsBucket,
            !Ref LambdaZipsBucketName,
          ]
        QSS3BucketName: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
        QSS3KeyPrefix: !Ref QSS3KeyPrefix
        CopyZipsRoleArn: !GetAtt SecurityStack.Outputs.CopyZipsRoleArn
        ConvertCertsRoleArn: !GetAtt SecurityStack.Outputs.ConvertCertificatesLambdaRoleArn
        DeleteResourcesRoleArn: !GetAtt SecurityStack.Outputs.DeleteResourcesLambdaRoleArn
        SitecorePrefix: !Ref SitecorePrefix
  # Sitecore ACM Stack
  ACMStack:
    Type: AWS::CloudFormation::Stack
    Condition: CreateExternalCertificate
    DependsOn:
      - FunctionsStack
    Properties:
      TemplateURL: 
        !Sub
          - 'https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}templates/sitecore-xp-acm.template.yaml'
          - S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]
            S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      Parameters:
        DomainName: !Ref ExternalCertFQDN
        HostedZoneID: !Ref ExternalR53ZoneID
        LambdaZipsBucketName:
          !If [
            CreateLambdaZipsBucket,
            !Ref LambdaZipsBucket,
            !Ref LambdaZipsBucketName,
          ]
        QSS3KeyPrefix: !Ref QSS3KeyPrefix
  # Sitecore Parameter Store Stack
  ParamStack:
    Type: AWS::CloudFormation::Stack
    # DependsOn: 
    #   - LoadBalancerInternal
    #   - FunctionsStack
    Properties:
      TemplateURL: !Sub
          - 'https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}templates/sitecore-xp-parameters.template.yaml'
          - S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]
            S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      Parameters:
        SCQSPrefix: !GetAtt FunctionsStack.Outputs.SCQSPrefix
        SCPrefix: !Ref SitecorePrefix
        SOLRCorePrefix: !Ref SOLRCorePrefix
        SOLRUrl: !Ref SOLRUrl
        EnvironmentType: !Ref EnvironmentType
        SCLogLevel: !Ref SCLogLevel
        CorsOrigins: !Ref CorsOrigins
        SCS3Bucket: !Ref SitecoreS3Bucket
        SCResourcesPrefix: !Ref SCResourcesPrefix
        SCLicensePrefix: !Ref SCLicensePrefix
        CDDNSName: !Ref CDDNSName
        CMDNSName: !Ref CMDNSName
        ISDNSName: !Ref ISDNSName
        IntDNS:
          !If [
            InternalDNSName,
            !Sub '${AWS::Region}.sitecore.internal',
            !Ref IntDNS,
          ]
  # Builds RDS MSSQL Database and ElastiCache Redis
  DBStack:
    Type: AWS::CloudFormation::Stack
    DependsOn: 
      # - SecurityStack
      - ParamStack # RDSsqlSG
    Properties:
      TemplateURL: 
        !Sub
          - 'https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}templates/sitecore-xp-db.template.yaml'
          - S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]
            S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      Parameters:
        PrivateSubnet1AID: !Ref PrivateSubnet1A
        PrivateSubnet2AID: !Ref PrivateSubnet2A
        DBInstanceClass: !Ref DBInstanceClass
        SQLEngineEdition: !Ref SQLEngineEdition
        SQLEngineVersion: !Ref SQLEngineVersion
        DBAutoMinorVersionUpgrade: !Ref DBAutoMinorVersionUpgrade
        BackupRetentionPeriod: !Ref BackupRetentionPeriod
        RDSSecurityGroup: !Ref RDSsqlSG
        VolumeIops: !Ref VolumeIops
        VolumeSize: !Ref VolumeSize
        VolumeType: !Ref VolumeType
        RDSMonitoringRole: !GetAtt SecurityStack.Outputs.RDSEnhancedMonitoringArn
        SCQSPrefix: !GetAtt FunctionsStack.Outputs.SCQSPrefix
        RedisSecurityGroup: !Ref RedisSG
        CacheNodeType: !Ref CacheNodeType
        Engine: 'redis'
        NumCacheNodes: '1'
        RedisPort: !Ref RedisPort

  # Sitecore AMI Build Stack
  CustomAMIStack:
    Type: AWS::CloudFormation::Stack
    # DependsOn: 
    #   - SecurityStack
    #   - ParamStack
    Properties:
      TemplateURL: 
        !Sub
          - 'https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}templates/sitecore-xp-ami.template.yaml'
          - S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]
            S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      Parameters:
        AutomationAssumeRole: !GetAtt SecurityStack.Outputs.SCAutomationRoleARN
        ImageID: '/aws/service/ami-windows-latest/Windows_Server-2019-English-Full-Base'
        SitecoreKeyPair: !Ref SitecoreKeyPair
        PrivateSubnet1A: !Ref PrivateSubnet1A
        IamInstanceProfile: !GetAtt SecurityStack.Outputs.SCAMIInstanceProfileName
        SecurityGroupIds: !Ref SitecoreInstanceSG
        InstanceType: 't2.large'
        LocalPath: !GetAtt ParamStack.Outputs.SCLocalResourcePath
        LocalQSScripts: !GetAtt ParamStack.Outputs.QSLocalResourcePath
        RootStackName: !GetAtt FunctionsStack.Outputs.SCQSPrefix
        TargetAmiName: !GetAtt ParamStack.Outputs.CustomAmiName
        QSS3KeyPrefix: !Ref QSS3KeyPrefix
        QSS3BucketName: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
        QSS3BucketRegion: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]

  # Custom Resource to convert and import Instance certificate, as it has the full certificate chain
  CertConvertACM:
    Type: AWS::CloudFormation::CustomResource
    DependsOn:  
      - CustomAMIStack 
      # - SecurityStack
      # - CertConvertACM
    Properties:
      ServiceToken: !GetAtt FunctionsStack.Outputs.ConvertCertificatesLambdaArn
      S3BucketName: !Ref SitecoreS3Bucket
      S3ObjectPrefix: !GetAtt ParamStack.Outputs.InstanceCertificateLocation
      SecretLocation: !Join 
        - ''
        - - 'sitecore-quickstart-'
          - !GetAtt FunctionsStack.Outputs.SCQSPrefix
          - '-certpass'
      AcmParameterPath: !Join 
        - ''
        - - '/'
          - !GetAtt FunctionsStack.Outputs.SCQSPrefix
          - '/cert/internal/acm'
  NetworkStack:
    Type: AWS::CloudFormation::Stack
    # DependsOn:
    #   - CertConvertACM
    #   - FunctionsStack
    Properties:
      TemplateURL: 
        !Sub
          - 'https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}templates/sitecore-xp-networking.template.yaml'
          - S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]
            S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      Parameters:
        LoadBalancerInternal: !Ref LoadBalancerInternal
        InternalCertificateARN: !GetAtt CertConvertACM.InternalCertARN
        LoadBalancerExternal: !Ref LoadBalancerExternal
        ExternalCertificateARN: !If [CreateExternalCertificate, !GetAtt ACMStack.Outputs.ACMCertificate, !Ref ExternalCertificateARN]
        XConnectNLB: !Ref XConnectNLB
        CollectionNLB: !Ref CollectionNLB
        RefDataNLB: !Ref RefDataNLB
        MarketAutoRepNLB: !Ref MarketAutoRepNLB
        MarketAutoNLB: !Ref MarketAutoNLB
        CortexRepNLB: !Ref CortexRepNLB
        CortexProcNLB: !Ref CortexProcNLB
        VPCID: !Ref VPCID
        IntDNS: !If [InternalDNSName, !Sub '${AWS::Region}.sitecore.internal', !Ref 'IntDNS']
        SCQSPrefix: !GetAtt FunctionsStack.Outputs.SCQSPrefix

  # Sitecore SOLR Stack
  SolrStack:
    Type: AWS::CloudFormation::Stack
    Condition: CreateDevSolr
    DependsOn: 
      - CustomAMIStack 
      # - SecurityStack
      # - ParamStack
    Properties:
      TemplateURL: 
        !Sub
          - 'https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}templates/sitecore-xp-solrdev.template.yaml'
          - S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]
            S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      Parameters:
        PrivateSubnet1A: !Ref PrivateSubnet1A
        PrivateSubnet2A: !Ref PrivateSubnet2A
        SolrInstanceType: !Ref CDInstanceType
        SolrInstanceSG: !Ref SitecoreInstanceSG
        SolrKeyPair: !Ref SitecoreKeyPair
        SCQSPrefix: !GetAtt FunctionsStack.Outputs.SCQSPrefix
        LocalQSScripts: !GetAtt ParamStack.Outputs.QSLocalResourcePath
        R53HostedZoneID: !If [
            CreateInternalR53,
            !GetAtt R53Stack.Outputs.R53IntHostedID,
            '',
          ] # If VPCPrivateDNS is True, this will be '' and no record for solr will be created.
        S3BucketName: !Ref SitecoreS3Bucket
        QSS3BucketName: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
        AutoscalingSNS: !Ref AutoscalingSNS
        LoadBalancerInternalDNS: !GetAtt LoadBalancerInternal.DNSName
        VPCID: !Ref VPCID
        InternalCertificateARN: !GetAtt CertConvertACM.InternalCertARN
        LoadBalancerInternal: !Ref LoadBalancerInternal

  # The following 3 stacks are used to introduce an if statement into the depends of the Sitecore ALB Stack
  # The dependency varies depending on the condition where SOLR is to be deployed or not.
  SOLRWaitHandle:
    Condition: CreateDevSolr
    DependsOn: 
      - SolrStack
    Type: AWS::CloudFormation::WaitConditionHandle

  WaitHandle:
    Type: AWS::CloudFormation::WaitConditionHandle

  SOLRDependencyCheck:
    Type: AWS::CloudFormation::WaitCondition
    Properties:
      Handle: !If [CreateDevSolr, !Ref SOLRWaitHandle, !Ref WaitHandle]
      Timeout: '1'
      Count: 0

  # Sitecore ALB Stack
  RolesStack:
    Type: AWS::CloudFormation::Stack
    DependsOn: 
      - SOLRDependencyCheck
    Properties:
      TemplateURL: 
        !Sub
          - 'https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}templates/sitecore-xp-roles.template.yaml'
          - S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]
            S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      Parameters:
        PrivateSubnet1A: !Ref PrivateSubnet1A
        PrivateSubnet2A: !Ref PrivateSubnet2A
        CDMinSize: !Ref CDMinSize
        CDMaxSize: !Ref CDMaxSize
        CDDesiredCapacity: !Ref CDDesiredCapacity
        SCQSPrefix: !GetAtt FunctionsStack.Outputs.SCQSPrefix
        CDInstanceType: !Ref CDInstanceType
        CDScalingMetric: !Ref CDScalingMetric
        CDScalingMetricValue: !Ref CDScalingMetricValue
        CMInstanceType: !Ref CMInstanceType
        CMScalingMetric: !Ref CMScalingMetric
        CMScalingMetricValue: !Ref CMScalingMetricValue
        SitecoreInstanceSG: !Ref SitecoreInstanceSG
        SCInstanceProfile: !GetAtt SecurityStack.Outputs.SCInstanceProfileARN
        SitecoreKeyPair: !Ref SitecoreKeyPair
        CMMinSize: !Ref CMMinSize
        CMMaxSize: !Ref CMMaxSize
        CMDesiredCapacity: '1' # TODO udpate later
        AutoscalingSNS: !Ref AutoscalingSNS
        LocalQSScripts: !GetAtt ParamStack.Outputs.QSLocalResourcePath
        CDExtTargetGroup: !GetAtt NetworkStack.Outputs.CDTargetGroup
        CMExtTargetGroup: !GetAtt NetworkStack.Outputs.CMTargetGroup
        ISExtTargetGroup: !GetAtt NetworkStack.Outputs.ISTargetGroup
        ColIntTargetGroup: !GetAtt NetworkStack.Outputs.CollectionTargetGroup
        CSIntTargetGroup: !GetAtt NetworkStack.Outputs.ColSearchTargetGroup
        CPIntTargetGroup: !GetAtt NetworkStack.Outputs.CortProcTargetGroup
        CRIntTargetGroup: !GetAtt NetworkStack.Outputs.CortRepTargetGroup
        MAIntTargetGroup: !GetAtt NetworkStack.Outputs.MarkAutoTargetGroup
        MARIntTargetGroup: !GetAtt NetworkStack.Outputs.MarkAutoRepTargetGroup
        PrcIntTargetGroup: !GetAtt NetworkStack.Outputs.ProcessingTargetGroup
        RDIntTargetGroup: !GetAtt NetworkStack.Outputs.RefDataTargetGroup
        RepIntTargetGroup: !GetAtt NetworkStack.Outputs.ReportingDataTargetGroup
        InternalDNS: !If [InternalDNSName, !Sub '${AWS::Region}.sitecore.internal', !Ref IntDNS]
Outputs:
  InternalALBDNS:
    Description: Internal DNS name of the ALB
    Value: !GetAtt LoadBalancerInternal.DNSName
  ExternalALBDNS:
    Description: DNS name of the external facing ALB. This will be used for the Content Delivery, Content Management & Identity Server DNS CNAME's
    Value: !GetAtt LoadBalancerExternal.DNSName
  InternalXConnectDNS:
    Description: Internal DNS name of the XConnect NLB
    Value: !GetAtt XConnectNLB.DNSName
  ContentDelivery:
    Description: The website name for the Content Delivery role. A CNAME entry needs to be added pointing to the 'ExternalALBDNS'
    Value: !Ref CDDNSName
  ContentManagment:
    Description: The website name for the Content Managment role. A CNAME entry needs to be added pointing to the 'ExternalALBDNS'
    Value: !Ref CMDNSName
  IdentityServer:
    Description: The website name for the Identity Server role. A CNAME entry needs to be added pointing to the 'ExternalALBDNS'
    Value: !Ref ISDNSName
  SolrURL:
    Description: The Solr URL configured for the Sitecore deployment
    Value: !GetAtt ParamStack.Outputs.SolrURL
  SQLEndpoint:
    Description: RDS SQL Database endpoint
    Value: !GetAtt DBStack.Outputs.RDSSQLEndpoint
  RedisEndpoint:
    Description: The Redis primary endpoint location for the Content Delivery role
    Value: !GetAtt DBStack.Outputs.CDRedisEndpoint
  SitecoreQuickStartPrefix:
    Description: The prefix used for resources created by the Quick Start
    Value: !GetAtt FunctionsStack.Outputs.SCQSPrefix
  InternalR53Zone:
    Description: The HostedZone ID of the R53 
    Value: !If [CreateInternalR53, !GetAtt R53Stack.Outputs.R53IntHostedID, 'Private VPC DNS selected. Please create internal DNS entries for Sitecore. See Deployment Guide for more details.']
  InternalDNSFQDN:
    Description: The internal VPC FQDN for the Sitecore deployment 
    Value: !If [CreateInternalR53, !GetAtt R53Stack.Outputs.InternalDNSFQDN, !Ref IntDNS]
  LoadBalancerProcRep:
    Description: The loadbalancer endpoint for the Processing and Reporting DNS CNames.
    Value: !GetAtt LoadBalancerInternal.DNSName
  LoadBalancerCollSearch:
    Description: The loadbalancer endpoint for the CollectionSearch DNS CName.
    Value: !GetAtt XConnectNLB.DNSName
  LoadBalancerColl:
    Description: The loadbalancer endpoint for the Collection DNS CName.
    Value: !GetAtt CollectionNLB.DNSName
  LoadBalancerRefData:
    Description: The loadbalancer endpoint for the ReferenceData DNS CName.
    Value: !GetAtt RefDataNLB.DNSName
  LoadBalancerMarketAutoRep:
    Description: The loadbalancer endpoint for the MarketingAutomationReporting DNS CName.
    Value: !GetAtt MarketAutoRepNLB.DNSName
  LoadBalancerMarketAuto:
    Description: The loadbalancer endpoint for the MarketingAutomation DNS CName.
    Value: !GetAtt MarketAutoNLB.DNSName
  LoadBalancerCortexRep:
    Description: The loadbalancer endpoint for the CortexReporting DNS CName.
    Value: !GetAtt CortexRepNLB.DNSName
  LoadBalancerCortexProc:
    Description: The loadbalancer endpoint for the CortexProcessing DNS CName.
    Value: !GetAtt CortexProcNLB.DNSName