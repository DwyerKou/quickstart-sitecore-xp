AWSTemplateFormatVersion: 2010-09-09
Description: "Deploys Sitecore into an existing VPC"
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Network configuration
        Parameters:
          - VPCCIDR
          - VPCID
          - PrivateSubnet1A
          - PrivateSubnet2A
          - PublicSubnet1
          - PublicSubnet2
          - ExternalCertificateARN
      - Label:
          default: Sitecore Configuration
        Parameters:
          - CDDNSName
          - CMDNSName
          - ISDNSName
          - IntDNS
          - CDMinSize
          - CDMaxSize
          - CDDesiredCapacity
          - CDInstanceType
          - CDScalingMetric
          - CDScalingMetricValue
          - CMMinSize
          - CMMaxSize
          - CMInstanceType
          - CMScalingMetric
          - CMScalingMetricValue
          - SitecoreKeyPair
          - SitecorePrefix
          - SitecoreS3Bucket
          - SCResourcesPrefix
          - SCLicensePrefix
          - SOLRCorePrefix
          - SOLRUrl
          - EnvironmentType
          - SCLogLevel
          - CorsOrigins
          - EmailNotifications
          - LambdaZipsBucketName
      - Label:
          default: SQL Server configuration
        Parameters:
          - PubliclyAccessible
          - DBInstanceClass
          - DBAutoMinorVersionUpgrade
          - SQLEngineEdition
          - SQLEngineVersion
          - VolumeSize
          - VolumeType
          - VolumeIops
          - BackupRetentionPeriod
      - Label:
          default: Redis ElastiCache configuration
        Parameters:
         - CacheNodeType
         - RedisPort
      - Label:
          default: AWS Quick Start configuration
        Parameters:
          - QSS3BucketName
          - QSS3KeyPrefix
          - RDGWSecurityGroup
    ParameterLabels:
    # VPC
      VPCID:
        default: VPC ID
      VPCCIDR:
        default: VPC CIDR
      PrivateSubnet1A:
        default: Private subnet 1 ID
      PrivateSubnet2A:
        default: Private subnet 2 ID
      PublicSubnet1:
        default: Public subnet 1 ID
      PublicSubnet2:
        default: Public subnet 2 ID
      ExternalCertificateARN:
        default: External Amazon Certificate Manager ARN
    # Sitecore Configuration
      CDDNSName:
        default: DNS name for Content Delivery Role
      CMDNSName:
        default: DNS name for Content Management Role
      ISDNSName:
        default: DNS name for Identity Server Role
      IntDNS:
        default: '[OPTIONAL] Internal DNS suffix for the Sitecore installation'
      CDMinSize:
        default: Min number of Content Delivery instances # Currently applied to all instances
      CDMaxSize:
        default: Max number of Content Delivery instances # Currently applied to all instances
      CDDesiredCapacity:
        default: The current number of desired Content Delivery instances # Currently applied to all instances
      CDInstanceType:
        default: The instance type to be used for the Content Delivery instances # Currently applied to all instances
      CDScalingMetric:
        default: The metric used to determine scalling of the Content Delivery role
      CDScalingMetricValue:
        default: The metric value used to determine scalling of the Content Delivery role
      CMMinSize:
        default: Min number of Content Management instance
      CMMaxSize:
        default: Max number of Content Management instance
      CMInstanceType:
        default: The instance type to be used for the Content Management instances
      CMScalingMetric:
        default: The metric used to determine scalling of the Content Management role
      CMScalingMetricValue:
        default: The metric value used to determine scalling of the Content Management role
      SitecoreKeyPair:
        default: EC2 Key Pair for Sitecore instances
      SitecorePrefix: 
        default: The Prefix to be used for the Sitecore installation
      SitecoreS3Bucket:
        default: S3 Bucket where Sitecore artifacts are located (Resource files, licence files.) This deployment will put objects into this bucket.
      SCResourcesPrefix:
        default: "The prefix where Sitecore installation files are located (eg: sitecorefiles/)"
      SCLicensePrefix:
        default: "The prefix where the sitecore license.zip is located (eg: licence/)"
      SOLRCorePrefix: 
        default: The prefix used for the SOLR Cores
      SOLRUrl:
        default: The Url for the SOLR deployment 
      EnvironmentType: 
        default: The Sitecore Environment Type
      SCLogLevel: 
        default: The Sitecore Log Level
      CorsOrigins: 
        default: The Sitecore Cors Origins
      EmailNotifications:
        default: The email address for receiving notifications on instance scaling.
      LambdaZipsBucketName:
        default: '[OPTIONAL] The name of the S3 bucket where the Lambda zip files should be placed. If you leave this parameter blank, an S3 bucket will be created.'
    # RDS Configuration
      PubliclyAccessible:
        default: Publically Accessible
      DBInstanceClass:
        default: To be udpated
      DBAutoMinorVersionUpgrade:
        default: Database auto minor version upgrade
      SQLEngineEdition:
        default: MSSQL database engine edition
      SQLEngineVersion:
        default: MSSQL database engine version
      VolumeIops:
        default: Data volume IOPS
      VolumeSize:
        default: Data volume size
      VolumeType:
        default: Data volume type
      BackupRetentionPeriod:
        default: Retention Period
    # Redis Configuration
      CacheNodeType:
        default: Redis cache node type
      RedisPort:
        default: Redis Port
    # Quick Start Config Params
      QSS3BucketName:
        default: Quick Start S3 bucket name
      QSS3KeyPrefix:
        default: Quick Start S3 key prefix
      RDGWSecurityGroup:
        default: Default SG #Remove later
Parameters:
  VPCID:
    Description: ID of the VPC (e.g., vpc-0343606e)
    Type: AWS::EC2::VPC::Id
  VPCCIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.0.0/16
    Description: CIDR Block for the VPC
    Type: String
  PrivateSubnet1A:
    Description: ID of the private subnet 1 in Availability Zone 1 (e.g., subnet-a0246dcd)
    Type: AWS::EC2::Subnet::Id
  PrivateSubnet2A:
    Description: ID of the private subnet 2 in Availability Zone 2 (e.g., subnet-a0246dcd)
    Type: AWS::EC2::Subnet::Id
  PublicSubnet1:
    Type: AWS::EC2::Subnet::Id
    Description: The public subnet in Availability Zone 1
  PublicSubnet2:
    Type: AWS::EC2::Subnet::Id
    Description: The public subnet in Availability Zone 2
  ExternalCertificateARN:
    Type: String
# Sitecore
  CDDNSName:
    Type: String
    Description: DNS name for Content Delivery Role. An alias for the ELB should be created after the stack creation
  CMDNSName:
    Type: String
    Description: DNS name for Content Managment Role. An alias for the ELB should be created after the stack creation
  ISDNSName:
    Type: String
    Description: DNS name for Identity Server Role. An alias for the ELB should be created after the stack creation
  IntDNS:
    Type: String
    Default: ''
    Description: Internal DNS name. If left blank, one will be generated for you
  CDMinSize:
    Type: Number
    Default: 1
    Description: The minimum number of Content Delivery instances to be available (this currently applies to ALL roles)
  CDMaxSize:
    Type: Number
    Default: 1
    Description: The maximum number of Content Delivery instances to be available (this currently applies to ALL roles)
  CDDesiredCapacity:
    Type: Number
    Default: 1
    Description: The desired number of Content Delivery instances to be available (this currently applies to ALL roles)
  CDInstanceType:
    AllowedValues:
    - m4.large
    - m4.xlarge
    - m4.2xlarge
    - m4.4xlarge
    - m4.10xlarge
    - m3.medium
    - m3.large
    - m3.xlarge
    - m3.2xlarge
    - c4.large
    - c4.xlarge
    - c4.2xlarge
    - c4.4xlarge
    - c4.8xlarge
    - c3.large
    - c3.xlarge
    - c3.2xlarge
    - c3.4xlarge
    - c3.8xlarge
    - r3.large
    - r3.xlarge
    - r3.2xlarge
    - r3.4xlarge
    - r3.8xlarge
    - i2.xlarge
    - i2.2xlarge
    - i2.4xlarge
    - i2.8xlarge
    ConstraintDescription: Choose an instance type. m3.medium or larger recommended.
    Default: m4.large
    Description: Web server instance type (this currently applies to ALL roles)
    Type: String
  CDScalingMetric:
    Description: The metric used to determine scalling of the Content Delivery role
    Default: ASGAverageCPUUtilization
    AllowedValues:
      - ASGAverageCPUUtilization 
      - ASGAverageNetworkIn 
      - ALBRequestCountPerTarget 
    Type: String
  CDScalingMetricValue:
    Description: The value required for the Scaling Metric (For ASGAverageNetworkIn this value is in bytes)
    Default: 300
    Type: Number
  CMMinSize:
    Type: Number
    Default: 1
    Description: The minimum number of Content Management instances to be available (this currently applies to ALL roles)
  CMMaxSize:
    Type: Number
    Default: 1
    Description: The maximum number of Content Management instances to be available (this currently applies to ALL roles)
  CMInstanceType:
    AllowedValues:
    - m4.large
    - m4.xlarge
    - m4.2xlarge
    - m4.4xlarge
    - m4.10xlarge
    - m3.medium
    - m3.large
    - m3.xlarge
    - m3.2xlarge
    - c4.large
    - c4.xlarge
    - c4.2xlarge
    - c4.4xlarge
    - c4.8xlarge
    - c3.large
    - c3.xlarge
    - c3.2xlarge
    - c3.4xlarge
    - c3.8xlarge
    - r3.large
    - r3.xlarge
    - r3.2xlarge
    - r3.4xlarge
    - r3.8xlarge
    - i2.xlarge
    - i2.2xlarge
    - i2.4xlarge
    - i2.8xlarge
    ConstraintDescription: Choose an instance type. m3.medium or larger recommended.
    Default: m4.large
    Description: Web server instance type for the Content Management role
    Type: String
  CMScalingMetric:
    Description: The metric used to determine scalling of the Content Management role
    Default: ASGAverageCPUUtilization
    AllowedValues:
      - ASGAverageCPUUtilization 
      - ASGAverageNetworkIn 
      - ALBRequestCountPerTarget 
    Type: String
  CMScalingMetricValue:
    Description: The value required for the Scaling Metric (For ASGAverageNetworkIn this value is in bytes)
    Default: 300
    Type: Number
  SitecoreKeyPair:
    Type: AWS::EC2::KeyPair::KeyName
    Description: The EC2 Key Pair to use with the Sitecore instances
  SitecorePrefix: 
    Type: String
    Description: The prefix to be used for the sitecore installation. This is limited to 8 characters.
    MinLength: 1
    MaxLength: 8
    AllowedPattern: ^[a-zA-Z0-9]*
  SitecoreS3Bucket:
    Type: String
    Description: The name of the S3 Bucket where the Sitecore resources (instalation files, license file, etc.) reside.
  SCResourcesPrefix:
    Type: String
    Description: The prefix for the sitecore install files. 
    Default: resources/
  SCLicensePrefix:
    Type: String
    Description: "The prefix for the sitecore licence.zip file. eg: license/" 
    Default: license/
  SOLRCorePrefix: 
    Type: String
    Description: The prefix used for the SOLR Cores
  SOLRUrl:
    Type: String 
    Description: The URL of your Solr server/cluster. 
  EnvironmentType: 
    Description: The type of deployment
    AllowedValues:
      - Production
      - Development
    Default: Production
    Type: String
  SCLogLevel: 
    AllowedValues:
      - Information
      - Debug
      - Error
      - Warning
      - None
    Default: Information
    Type: String
  CorsOrigins: 
    Type: String
  EmailNotifications:
    Type: String
  LambdaZipsBucketName:
    Type: String
    Default: ''
# RDS MS SQL
  DBAutoMinorVersionUpgrade: 
    AllowedValues: 
      - "true"
      - "false"
    Default: "false"
    Description: Select true/false to setup Auto Minor Version upgrade.
    Type: String
  PubliclyAccessible: 
    AllowedValues: 
      - "true"
      - "false"
    Default: "false"
    Description: Select whether DB instance is internet-facing.
    Type: String
  DBInstanceClass:
    AllowedValues:
      - db.m5.large
      - db.m5.xlarge
      - db.m5.2xlarge
      - db.m5.4xlarge
      - db.m5.12xlarge
      - db.m5.24xlarge
      - db.m4.large
      - db.m4.xlarge
      - db.m4.2xlarge
      - db.m4.4xlarge
      - db.m4.10xlarge
      - db.m4.16xlarge
      - db.r4.large
      - db.r4.xlarge
      - db.r4.2xlarge
      - db.r4.4xlarge
      - db.r4.8xlarge
      - db.r4.16xlarge
    ConstraintDescription: "Must select a valid database instance type."
    Default: db.r4.2xlarge
    Description: "The name of the compute and memory capacity class of the database instance."
    Type: String
  SQLEngineEdition:
    AllowedValues:
      - sqlserver-ee
      - sqlserver-se
      - sqlserver-ex
      - sqlserver-web
    ConstraintDescription: "Must select a MSSQL Database Engine Edition."
    Default: sqlserver-se
    Description: "MSSQL Database Engine Edition."
    Type: String
  SQLEngineVersion:
    AllowedValues:
      - 14.00.3192.2.v1
      - 14.00.3049.1.v1
      - 14.00.3035.2.v1
      - 14.00.3015.40.v1
      - 14.00.1000.169.v1
    ConstraintDescription: "Must select a MSSQL Database Engine Version."
    Default: 14.00.3192.2.v1
    Description: "MSSQL Database Engine Version."
    Type: String
  BackupRetentionPeriod:
    Default: 7
    Description: The number of days for which automated backups are retained. Setting this parameter to a positive number enables backups. Setting this parameter to 0 disables automated backups. 
    Type: Number
  VolumeIops:
    Default: 1000
    Description: Provisioned IOPS for the SQL Data, Logs and TempDb volumes. This
      parameter is only applicable when SQL Server Volume Type is set to "io1"
    MaxValue: '20000'
    MinValue: '100'
    Type: Number
  VolumeSize:
    Default: 500
    Description: Volume size for the SQL Data, Logs and TempDb volumes, in GiB
    MaxValue: '16000'
    MinValue: '100'
    Type: Number
  VolumeType:
    AllowedValues:
      - gp2
      - io1
    Default: gp2
    Description: Volume type for the SQL Data, Logs and TempDb volumes
    Type: String
# Redis Configuration
  CacheNodeType:
    Description: The instance type the nodes will launch under.
    Type: String
    Default: cache.m3.large
    AllowedValues:
      - cache.t2.micro
      - cache.t2.small
      - cache.t2.medium
      - cache.m3.medium
      - cache.m3.large
      - cache.m3.xlarge
      - cache.m3.2xlarge
      - cache.r3.large
      - cache.r3.xlarge
      - cache.r3.2xlarge
      - cache.r3.4xlarge
      - cache.r3.8xlarge
  RedisPort:
    Type: Number
    Default: 6379
# Quick Start Confguration
  QSS3BucketName:
    AllowedPattern: ^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$
    ConstraintDescription: Quick Start bucket name can include numbers, lowercase
      letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen
      (-).
    Default: aws-quickstart
    Description: S3 bucket name for the Quick Start assets. Quick Start bucket name
      can include numbers, lowercase letters, uppercase letters, and hyphens (-).
      It cannot start or end with a hyphen (-).
    Type: String
  QSS3KeyPrefix:
    AllowedPattern: ^[0-9a-zA-Z-/]*$
    ConstraintDescription: Quick Start key prefix can include numbers, lowercase letters,
      uppercase letters, hyphens (-), and forward slash (/).
    Default: quickstart-sitecore-xp/
    Description: S3 key prefix for the Quick Start assets. Quick Start key prefix
      can include numbers, lowercase letters, uppercase letters, hyphens (-), and
      forward slash (/).
    Type: String
# Remove Later
  RDGWSecurityGroup:
    Type: AWS::EC2::SecurityGroup::Id

Conditions:
  CreateLambdaZipsBucket: !Equals [!Ref 'LambdaZipsBucketName', '']
  InternalDNSName: !Equals [!Ref 'IntDNS', '']

Resources:
# Local region S3 bucket for Lambda functions
  LambdaZipsBucket:
    Type: AWS::S3::Bucket
    Condition: CreateLambdaZipsBucket
  AutoscalingSNS:
    Type: AWS::SNS::Topic
  ASGSubscription:
    Type: AWS::SNS::Subscription
    Properties:
      Endpoint: !Ref EmailNotifications
      Protocol: email
      TopicArn: !Ref 'AutoscalingSNS'
# Create required Security Groups
  SitecoreInstanceSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Used for the Sitecore Instances
      VpcId: !Ref VPCID
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 3389
          ToPort: 3389
          SourceSecurityGroupId: !Ref RDGWSecurityGroup
          Description: RDP from Remote Desktop Gateway 
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: !Ref VPCCIDR
          Description: HTTPS Traffic from within the VPC
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: !Ref VPCCIDR
          Description: HTTP Traffic from within the VPC
  LoadBalancerInternalSG:
    # DependsOn: SitecoreInstanceSG
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Used for the Internal ALB
      VpcId: !Ref VPCID
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          SourceSecurityGroupId: !Ref SitecoreInstanceSG
          Description: HTTPS Traffic from within the VPC
        - IpProtocol: tcp 
          FromPort: 80
          ToPort: 80
          SourceSecurityGroupId: !Ref SitecoreInstanceSG
          Description: HTTPS Traffic from within the VPC
  LoadBalancerExternalSG:
    # DependsOn: SitecoreServerSG
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Used for the External ALB
      VpcId: !Ref VPCID
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
  RDSsqlSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: SG for RDS MSSQL.
      VpcId: !Ref VPCID
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 1433
          ToPort: 1433
          CidrIp: !Ref 'VPCCIDR'
  RedisSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Used for the Redis ElastiCache cluster
      VpcId: !Ref VPCID
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: !Ref RedisPort
          ToPort: !Ref RedisPort
          CidrIp: !Ref 'VPCCIDR'
# Internal ALB
  LoadBalancerInternal:
    # DependsOn: LoadBalancerInternalSG
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Type: application
      Scheme: internal
      IpAddressType: ipv4
      SecurityGroups:
        - !Ref LoadBalancerInternalSG
      Subnets:
        - !Ref PrivateSubnet1A
        - !Ref PrivateSubnet2A
# External ALB
  LoadBalancerExternal:
    # DependsOn: LoadBalancerExternalSG
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Type: application
      Scheme: internet-facing
      IpAddressType: ipv4
      SecurityGroups:
        - !Ref LoadBalancerExternalSG
      Subnets:
        - !Ref PublicSubnet1
        - !Ref PublicSubnet2
# Parameter entries for internal & External ALB - put here so that Parameter Stack not waiting
  InternalALBURL:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Join #!Sub /${AWS::StackName}/net/private/alb
        - ''
        - - '/'
          - !GetAtt FunctionsStack.Outputs.SCQSPrefix
          - '/net/private/alb'
      Description: Parameter for the Sitecore XP1 Quick Start
      Type: String 
      Value: !GetAtt LoadBalancerInternal.DNSName
  ExternalALBURL:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Join #!Sub /${AWS::StackName}/net/public/alb
        - ''
        - - '/'
          - !GetAtt FunctionsStack.Outputs.SCQSPrefix
          - '/net/public/alb'
      Description: Parameter for the Sitecore XP1 Quick Start
      Type: String 
      Value: !GetAtt LoadBalancerExternal.DNSName
# Internal DNS Configuration
  InternalR53:
    Type: AWS::Route53::HostedZone
    Properties:
      Name: !If [InternalDNSName, !Sub '${AWS::Region}.sitecore.internal', !Ref IntDNS]
      VPCs:
        - VPCId: !Ref VPCID
          VPCRegion: !Sub ${AWS::Region}
  # IDRecord:
  #   Type: AWS::Route53::RecordSet
  #   Properties:
  #     HostedZoneId: !Ref InternalR53
  #     Name: !If [InternalDNSName, !Sub 'identity.${AWS::Region}.sitecore.internal', !Sub 'identity.${IntDNS}]
  #     Type: CNAME
  #     TTL: '900'
  #     ResourceRecords:
  #       - !GetAtt LoadBalancerInternal.DNSName
  CollRecord:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneId: !Ref InternalR53
      Name: !If [InternalDNSName, !Sub 'coll.${AWS::Region}.sitecore.internal', !Sub 'coll.${IntDNS}']
      Type: CNAME
      TTL: '900'
      ResourceRecords:
        - !GetAtt LoadBalancerInternal.DNSName
  CSRecord:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneId: !Ref InternalR53
      Name: !If [InternalDNSName, !Sub 'collsearch.${AWS::Region}.sitecore.internal', !Sub 'collsearch.${IntDNS}']
      Type: CNAME
      TTL: '900'
      ResourceRecords:
        - !GetAtt LoadBalancerInternal.DNSName
  RDRecord:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneId: !Ref InternalR53
      Name: !If [InternalDNSName, !Sub 'refdata.${AWS::Region}.sitecore.internal', !Sub 'refdata.${IntDNS}']
      Type: CNAME
      TTL: '900'
      ResourceRecords:
        - !GetAtt LoadBalancerInternal.DNSName
  MARecord:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneId: !Ref InternalR53
      Name: !If [InternalDNSName, !Sub 'mktauto.${AWS::Region}.sitecore.internal', !Sub 'mktauto.${IntDNS}']
      Type: CNAME
      TTL: '900'
      ResourceRecords:
        - !GetAtt LoadBalancerInternal.DNSName
  MARRecord:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneId: !Ref InternalR53
      Name: !If [InternalDNSName, !Sub 'mktautorep.${AWS::Region}.sitecore.internal', !Sub 'mktautorep.${IntDNS}']
      Type: CNAME
      TTL: '900'
      ResourceRecords:
        - !GetAtt LoadBalancerInternal.DNSName
  CPRecord:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneId: !Ref InternalR53
      Name: !If [InternalDNSName, !Sub 'cortexproc.${AWS::Region}.sitecore.internal', !Sub 'cortexproc.${IntDNS}']
      Type: CNAME
      TTL: '900'
      ResourceRecords:
        - !GetAtt LoadBalancerInternal.DNSName
  CRRecord:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneId: !Ref InternalR53
      Name: !If [InternalDNSName, !Sub 'cortexrep.${AWS::Region}.sitecore.internal', !Sub 'cortexrep.${IntDNS}']
      Type: CNAME
      TTL: '900'
      ResourceRecords:
        - !GetAtt LoadBalancerInternal.DNSName
  PRCRecord:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneId: !Ref InternalR53
      Name: !If [InternalDNSName, !Sub 'proc.${AWS::Region}.sitecore.internal', !Sub 'proc.${IntDNS}']
      Type: CNAME
      TTL: '900'
      ResourceRecords:
        - !GetAtt LoadBalancerInternal.DNSName
  RepRecord:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneId: !Ref InternalR53
      Name: !If [InternalDNSName, !Sub 'rep.${AWS::Region}.sitecore.internal', !Sub 'rep.${IntDNS}']
      Type: CNAME
      TTL: '900'
      ResourceRecords:
        - !GetAtt LoadBalancerInternal.DNSName
# Sitecore Security Stack
  SecurityStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub 'https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}templates/sitecore-xp-security.template.yaml'
      Parameters:
        SitecoreS3Bucket: !Ref SitecoreS3Bucket
        QSS3BucketName: !Ref QSS3BucketName
        QSS3KeyPrefix: !Ref QSS3KeyPrefix
        LambdaZipsBucketName: !If [ CreateLambdaZipsBucket, !Ref LambdaZipsBucket, !Ref LambdaZipsBucketName ]
# Create lambda functions
  FunctionsStack:
    Type: "AWS::CloudFormation::Stack"
    # DependsOn: SecurityStack
    Properties:
      TemplateURL: !Sub 'https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}templates/sitecore-xp-functions.template.yaml'
      Parameters:
        LambdaZipsBucketName: !If [ CreateLambdaZipsBucket, !Ref LambdaZipsBucket, !Ref LambdaZipsBucketName ]
        QSS3BucketName: !Ref QSS3BucketName
        QSS3KeyPrefix: !Ref QSS3KeyPrefix
        CopyZipsRoleArn: !GetAtt SecurityStack.Outputs.CopyZipsRoleArn
        ConvertCertsRoleArn: !GetAtt SecurityStack.Outputs.ConvertCertificatesLambdaRoleArn
        DeleteResourcesRoleArn: !GetAtt SecurityStack.Outputs.DeleteResourcesLambdaRoleArn
        SitecorePrefix: !Ref SitecorePrefix
# Sitecore Parameter Store Stack
  ParamStack:
    Type: AWS::CloudFormation::Stack
    # DependsOn: LoadBalancerInternal; FunctionsStack
    Properties:
      TemplateURL: !Sub 'https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}templates/sitecore-xp-parameters.template.yaml'
      Parameters:
        # IntLBDNS: !GetAtt LoadBalancerInternal.DNSName
        SCQSPrefix: !GetAtt FunctionsStack.Outputs.SCQSPrefix
        SCPrefix: !Ref SitecorePrefix
        SOLRCorePrefix: !Ref SOLRCorePrefix
        SOLRUrl: !Ref SOLRUrl
        EnvironmentType: !Ref EnvironmentType
        SCLogLevel: !Ref SCLogLevel
        CorsOrigins: !Ref CorsOrigins
        SCS3Bucket: !Ref SitecoreS3Bucket
        SCResourcesPrefix: !Ref SCResourcesPrefix
        SCLicensePrefix: !Ref SCLicensePrefix
        CDDNSName: !Ref CDDNSName
        CMDNSName: !Ref CMDNSName
        ISDNSName: !Ref ISDNSName
        IntDNS: !If [InternalDNSName, !Sub '${AWS::Region}.sitecore.internal', !Ref IntDNS]
# Builds RDS MSSQL Database and ElastiCache Redis
  DBStack:
    Type: AWS::CloudFormation::Stack
    DependsOn: [SecurityStack, ParamStack] # RDSsqlSG
    Properties:
      TemplateURL: !Sub 'https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}templates/sitecore-xp-rds-mssql.template.yaml'
      Parameters:
        PrivateSubnet1AID: !Ref PrivateSubnet1A
        PrivateSubnet2AID: !Ref PrivateSubnet2A
        PubliclyAccessible: !Ref PubliclyAccessible
        DBInstanceClass:  !Ref DBInstanceClass
        SQLEngineEdition: !Ref SQLEngineEdition
        SQLEngineVersion: !Ref SQLEngineVersion
        DBAutoMinorVersionUpgrade:  !Ref DBAutoMinorVersionUpgrade
        BackupRetentionPeriod:  !Ref BackupRetentionPeriod
        RDSSecurityGroup: !Ref RDSsqlSG
        VolumeIops: !Ref VolumeIops
        VolumeSize: !Ref VolumeSize
        VolumeType: !Ref VolumeType
        SCQSPrefix: !GetAtt FunctionsStack.Outputs.SCQSPrefix
        RedisSecurityGroup: !Ref RedisSG
        CacheNodeType: !Ref CacheNodeType
        Engine: 'redis'
        NumCacheNodes: '1'
        RedisPort: !Ref RedisPort

# Sitecore AMI Build Stack
  CustomAMIStack:
    Type: AWS::CloudFormation::Stack
    #DependsOn: [SecurityStack, ParamStack]
    Properties:
      TemplateURL: !Sub 'https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}templates/sitecore-xp-ami.template.yaml'
      Parameters:
        AutomationAssumeRole: !GetAtt SecurityStack.Outputs.SCAutomationRoleARN
        ImageID: "/aws/service/ami-windows-latest/Windows_Server-2019-English-Full-Base"
        SitecoreKeyPair: !Ref SitecoreKeyPair
        PrivateSubnet1A: !Ref PrivateSubnet1A
        IamInstanceProfile: !GetAtt SecurityStack.Outputs.SCAMIInstanceProfileName
        SecurityGroupIds: !Ref SitecoreInstanceSG
        InstanceType: "t2.large"
        LocalPath: !GetAtt ParamStack.Outputs.SCLocalResourcePath 
        LocalQSScripts: !GetAtt ParamStack.Outputs.QSLocalResourcePath 
        RootStackName: !GetAtt FunctionsStack.Outputs.SCQSPrefix
        TargetAmiName: !GetAtt ParamStack.Outputs.CustomAmiName 
        QSS3BucketName: !Ref QSS3BucketName
        QSS3KeyPrefix: !Ref QSS3KeyPrefix

# Custom Resource to convert and import Instance certificate, as it has the full certificate chain
  CertConvertACM:
    Type: AWS::CloudFormation::CustomResource
    DependsOn: CustomAMIStack # SecurityStack, CertConvertACM
    Properties:
      ServiceToken: !GetAtt FunctionsStack.Outputs.ConvertCertificatesLambdaArn
      S3BucketName: !Ref SitecoreS3Bucket
      S3ObjectPrefix: !GetAtt ParamStack.Outputs.InstanceCertificateLocation
      SecretLocation: !Join #!Sub sitecore-quickstart-${AWS::StackName}-certpass
                - ''
                - - 'sitecore-quickstart-'
                  - !GetAtt FunctionsStack.Outputs.SCQSPrefix
                  - '-certpass'
      AcmParameterPath: !Join #!Sub /${AWS::StackName}/cert/internal/acm
                - ''
                - - '/'
                  - !GetAtt FunctionsStack.Outputs.SCQSPrefix
                  - '/cert/internal/acm'

# Sitecore ALB Stack
  ALBStack:
    Type: AWS::CloudFormation::Stack
    DependsOn: CustomAMIStack # SecurityStack, CertConvertACM
    Properties:
      TemplateURL: !Sub 'https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}templates/sitecore-xp-alb.template.yaml'
      Parameters:
        PrivateSubnet1A: !Ref PrivateSubnet1A
        PrivateSubnet2A: !Ref PrivateSubnet2A
        VPCID: !Ref VPCID
        LoadBalancerInternal: !Ref LoadBalancerInternal
        LoadBalancerExternal: !Ref LoadBalancerExternal
        InternalCertificateARN: !GetAtt CertConvertACM.InternalCertARN
        ExternalCertificateARN: !Ref ExternalCertificateARN
        CDMinSize: !Ref CDMinSize
        CDMaxSize: !Ref CDMaxSize
        CDDesiredCapacity: !Ref CDDesiredCapacity
        SCQSPrefix: !GetAtt FunctionsStack.Outputs.SCQSPrefix
        CDInstanceType: !Ref CDInstanceType
        CDScalingMetric: !Ref CDScalingMetric
        CDScalingMetricValue: !Ref CDScalingMetricValue
        CMInstanceType: !Ref CMInstanceType
        CMScalingMetric: !Ref CMScalingMetric
        CMScalingMetricValue: !Ref CMScalingMetricValue
        SitecoreInstanceSG: !Ref SitecoreInstanceSG
        SCInstanceProfile: !GetAtt SecurityStack.Outputs.SCInstanceProfileARN
        SitecoreKeyPair: !Ref SitecoreKeyPair
        CMMinSize: !Ref CMMinSize
        CMMaxSize: !Ref CMMaxSize
        CMDesiredCapacity: '1' # TODO udpate later
        IntDNS: !If [InternalDNSName, !Sub '${AWS::Region}.sitecore.internal', !Ref IntDNS]
        AutoscalingSNS: !Ref AutoscalingSNS
        LocalQSScripts: !GetAtt ParamStack.Outputs.QSLocalResourcePath
Outputs:
  ALBInternalDNS:
    Description: Internal DNS name of the ALB
    Value: !GetAtt LoadBalancerInternal.DNSName
  ALBExternalDNS:
    Description: DNS name of the external facing ALB. This will be used for the Content Delivery, Content Management & Identity Server DNS CNAME's
    Value: !GetAtt LoadBalancerExternal.DNSName
  ContentDelivery:
    Description: The website name for the Content Delivery role. A CNAME entry needs to be added pointing to the 'ALBExternalDNS'
    Value: !Ref CDDNSName
  ContentManagment:
    Description: The website name for the Content Managment role. A CNAME entry needs to be added pointing to the 'ALBExternalDNS'
    Value: !Ref CMDNSName
  IdentityServer:
    Description: The website name for the Identity Server role. A CNAME entry needs to be added pointing to the 'ALBExternalDNS'
    Value: !Ref ISDNSName
  SQLEndpoint:
    Description: RDS SQL Database endpoint
    Value: !GetAtt DBStack.Outputs.RDSSQLEndpoint
  RedisEndpoint:
    Description: The Redis primary endpoint location for the Content Delivery role
    Value: !GetAtt DBStack.Outputs.CDRedisEndpoint
  SitecoreQuickStartPrefix:
    Description: The prefix used for resources created by the Quick Start
    Value: !GetAtt FunctionsStack.Outputs.SCQSPrefix